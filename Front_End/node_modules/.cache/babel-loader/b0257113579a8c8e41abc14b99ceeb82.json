{"ast":null,"code":"export function elementContains(parent, child) {\n  var currentElement = child;\n\n  while (currentElement) {\n    if (currentElement === parent) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n/**\r\n * Gets the window or iframe container of the target element\r\n * @param element\r\n */\n\nexport function getWindow(element) {\n  if (typeof window === \"undefined\") {\n    return undefined;\n  } else {\n    return element && element.ownerDocument && element.ownerDocument.defaultView ? element.ownerDocument.defaultView : window;\n  }\n}\n/**\r\n * Finds the nearest parent element of the target that is scrollable on the Y axis\r\n * @param element\r\n */\n\nexport function findScrollableParent(element) {\n  var currentElement = element;\n\n  while (currentElement && currentElement !== document.body) {\n    var styles = getComputedStyle(currentElement);\n    var overflowY = styles ? styles.getPropertyValue(\"overflow-y\") : \"\";\n\n    if (overflowY && (overflowY === \"scroll\" || overflowY === \"auto\")) {\n      return currentElement;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return document.body;\n}","map":{"version":3,"sources":["/Users/ayounghosh/Downloads/Create_Work_Item_Azure_Devops/Front_End/node_modules/azure-devops-ui/Utilities/Dom.js"],"names":["elementContains","parent","child","currentElement","parentElement","getWindow","element","window","undefined","ownerDocument","defaultView","findScrollableParent","document","body","styles","getComputedStyle","overflowY","getPropertyValue"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;AAC3C,MAAIC,cAAc,GAAGD,KAArB;;AACA,SAAOC,cAAP,EAAuB;AACnB,QAAIA,cAAc,KAAKF,MAAvB,EAA+B;AAC3B,aAAO,IAAP;AACH;;AACDE,IAAAA,cAAc,GAAGA,cAAc,CAACC,aAAhC;AACH;;AACD,SAAO,KAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,WAAOC,SAAP;AACH,GAFD,MAGK;AACD,WAAOF,OAAO,IAAIA,OAAO,CAACG,aAAnB,IAAoCH,OAAO,CAACG,aAAR,CAAsBC,WAA1D,GAAwEJ,OAAO,CAACG,aAAR,CAAsBC,WAA9F,GAA4GH,MAAnH;AACH;AACJ;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASI,oBAAT,CAA8BL,OAA9B,EAAuC;AAC1C,MAAIH,cAAc,GAAGG,OAArB;;AACA,SAAOH,cAAc,IAAIA,cAAc,KAAKS,QAAQ,CAACC,IAArD,EAA2D;AACvD,QAAIC,MAAM,GAAGC,gBAAgB,CAACZ,cAAD,CAA7B;AACA,QAAIa,SAAS,GAAGF,MAAM,GAAGA,MAAM,CAACG,gBAAP,CAAwB,YAAxB,CAAH,GAA2C,EAAjE;;AACA,QAAID,SAAS,KAAKA,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,MAA7C,CAAb,EAAmE;AAC/D,aAAOb,cAAP;AACH;;AACDA,IAAAA,cAAc,GAAGA,cAAc,CAACC,aAAhC;AACH;;AACD,SAAOQ,QAAQ,CAACC,IAAhB;AACH","sourcesContent":["export function elementContains(parent, child) {\r\n    var currentElement = child;\r\n    while (currentElement) {\r\n        if (currentElement === parent) {\r\n            return true;\r\n        }\r\n        currentElement = currentElement.parentElement;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Gets the window or iframe container of the target element\r\n * @param element\r\n */\r\nexport function getWindow(element) {\r\n    if (typeof window === \"undefined\") {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return element && element.ownerDocument && element.ownerDocument.defaultView ? element.ownerDocument.defaultView : window;\r\n    }\r\n}\r\n/**\r\n * Finds the nearest parent element of the target that is scrollable on the Y axis\r\n * @param element\r\n */\r\nexport function findScrollableParent(element) {\r\n    var currentElement = element;\r\n    while (currentElement && currentElement !== document.body) {\r\n        var styles = getComputedStyle(currentElement);\r\n        var overflowY = styles ? styles.getPropertyValue(\"overflow-y\") : \"\";\r\n        if (overflowY && (overflowY === \"scroll\" || overflowY === \"auto\")) {\r\n            return currentElement;\r\n        }\r\n        currentElement = currentElement.parentElement;\r\n    }\r\n    return document.body;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}