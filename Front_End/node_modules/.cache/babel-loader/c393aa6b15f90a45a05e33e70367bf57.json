{"ast":null,"code":"/**\r\n * Basic ItemProvider that surfaces an array of items through the IItemProvider\r\n * interface.\r\n */\nvar ArrayItemProvider =\n/** @class */\nfunction () {\n  function ArrayItemProvider(items) {\n    this.items = items;\n  }\n\n  Object.defineProperty(ArrayItemProvider.prototype, \"length\", {\n    get: function () {\n      return this.items.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrayItemProvider.prototype, \"value\", {\n    get: function () {\n      return this.items;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ArrayItemProvider;\n}();\n\nexport { ArrayItemProvider };\n/**\r\n * Helper function to get the value of a set of items that can be an itemProvider or normal array.\r\n * @param items the items to retrieve the value from.\r\n */\n\nexport function getItemsValue(items) {\n  return Array.isArray(items) ? items : items.value;\n}","map":{"version":3,"sources":["/Users/ayounghosh/Downloads/Create_Work_Item_Azure_Devops/Front_End/node_modules/azure-devops-ui/Utilities/Provider.js"],"names":["ArrayItemProvider","items","Object","defineProperty","prototype","get","length","enumerable","configurable","getItemsValue","Array","isArray","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsBH,iBAAiB,CAACI,SAAxC,EAAmD,QAAnD,EAA6D;AACzDC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,KAAL,CAAWK,MAAlB;AACH,KAHwD;AAIzDC,IAAAA,UAAU,EAAE,IAJ6C;AAKzDC,IAAAA,YAAY,EAAE;AAL2C,GAA7D;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsBH,iBAAiB,CAACI,SAAxC,EAAmD,OAAnD,EAA4D;AACxDC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,KAAZ;AACH,KAHuD;AAIxDM,IAAAA,UAAU,EAAE,IAJ4C;AAKxDC,IAAAA,YAAY,EAAE;AAL0C,GAA5D;AAOA,SAAOR,iBAAP;AACH,CAnBsC,EAAvC;;AAoBA,SAASA,iBAAT;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASS,aAAT,CAAuBR,KAAvB,EAA8B;AACjC,SAAOS,KAAK,CAACC,OAAN,CAAcV,KAAd,IAAuBA,KAAvB,GAA+BA,KAAK,CAACW,KAA5C;AACH","sourcesContent":["/**\r\n * Basic ItemProvider that surfaces an array of items through the IItemProvider\r\n * interface.\r\n */\r\nvar ArrayItemProvider = /** @class */ (function () {\r\n    function ArrayItemProvider(items) {\r\n        this.items = items;\r\n    }\r\n    Object.defineProperty(ArrayItemProvider.prototype, \"length\", {\r\n        get: function () {\r\n            return this.items.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ArrayItemProvider.prototype, \"value\", {\r\n        get: function () {\r\n            return this.items;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ArrayItemProvider;\r\n}());\r\nexport { ArrayItemProvider };\r\n/**\r\n * Helper function to get the value of a set of items that can be an itemProvider or normal array.\r\n * @param items the items to retrieve the value from.\r\n */\r\nexport function getItemsValue(items) {\r\n    return Array.isArray(items) ? items : items.value;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}