{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, warnMutuallyExclusive, initializeComponentRef, Async, on, FocusRects } from '../../Utilities';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'SliderBase';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nvar SliderBase =\n/** @class */\nfunction (_super) {\n  __extends(SliderBase, _super);\n\n  function SliderBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._disposables = [];\n    _this._sliderLine = React.createRef();\n    _this._thumb = React.createRef();\n    _this._lowerValueThumb = React.createRef();\n    _this._onKeyDownTimer = -1;\n    _this._isAdjustingLowerValue = false;\n\n    _this._getAriaValueText = function (value) {\n      var ariaValueText = _this.props.ariaValueText;\n\n      if (value !== undefined) {\n        return ariaValueText ? ariaValueText(value) : value.toString();\n      }\n\n      return undefined;\n    };\n\n    _this._calculateCurrentSteps = function (event) {\n      if (!_this._sliderLine.current) {\n        return;\n      }\n\n      var _a = _this.props,\n          max = _a.max,\n          min = _a.min,\n          step = _a.step;\n      var steps = (max - min) / step;\n\n      var sliderPositionRect = _this._sliderLine.current.getBoundingClientRect();\n\n      var sliderLength = !_this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n      var stepLength = sliderLength / steps;\n      var currentSteps;\n      var distance;\n\n      if (!_this.props.vertical) {\n        var left = _this._getPosition(event, _this.props.vertical);\n\n        distance = getRTL(_this.props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n        currentSteps = distance / stepLength;\n      } else {\n        var bottom = _this._getPosition(event, _this.props.vertical);\n\n        distance = sliderPositionRect.bottom - bottom;\n        currentSteps = distance / stepLength;\n      }\n\n      return currentSteps;\n    };\n\n    _this._onMouseDownOrTouchStart = function (event) {\n      var _a = _this.props,\n          ranged = _a.ranged,\n          min = _a.min,\n          step = _a.step;\n\n      if (ranged) {\n        var currentSteps = _this._calculateCurrentSteps(event);\n\n        var newRenderedValue = min + step * currentSteps;\n\n        if (newRenderedValue <= _this.state.lowerValue || newRenderedValue - _this.state.lowerValue <= _this.state.value - newRenderedValue) {\n          _this._isAdjustingLowerValue = true;\n        } else {\n          _this._isAdjustingLowerValue = false;\n        }\n      }\n\n      if (event.type === 'mousedown') {\n        _this._disposables.push(on(window, 'mousemove', _this._onMouseMoveOrTouchMove, true), on(window, 'mouseup', _this._onMouseUpOrTouchEnd, true));\n      } else if (event.type === 'touchstart') {\n        _this._disposables.push(on(window, 'touchmove', _this._onMouseMoveOrTouchMove, true), on(window, 'touchend', _this._onMouseUpOrTouchEnd, true));\n      }\n\n      _this._onMouseMoveOrTouchMove(event, true);\n    };\n\n    _this._onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n      if (!_this._sliderLine.current) {\n        return;\n      }\n\n      var _a = _this.props,\n          max = _a.max,\n          min = _a.min,\n          step = _a.step;\n      var steps = (max - min) / step;\n\n      var currentSteps = _this._calculateCurrentSteps(event);\n\n      var currentValue;\n      var renderedValue; // The value shouldn't be bigger than max or be smaller than min.\n\n      if (currentSteps > Math.floor(steps)) {\n        renderedValue = currentValue = max;\n      } else if (currentSteps < 0) {\n        renderedValue = currentValue = min;\n      } else {\n        renderedValue = min + step * currentSteps;\n        currentValue = min + step * Math.round(currentSteps);\n      }\n\n      _this._updateValue(currentValue, renderedValue);\n\n      if (!suppressEventCancelation) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n\n    _this._onMouseUpOrTouchEnd = function (event) {\n      // Disable renderedValue override.\n      _this.setState({\n        renderedValue: undefined,\n        renderedLowerValue: undefined\n      });\n\n      if (_this.props.onChanged) {\n        _this.props.onChanged(event, _this.state.value);\n      }\n\n      _this._disposeListeners();\n    };\n\n    _this._disposeListeners = function () {\n      _this._disposables.forEach(function (dispose) {\n        return dispose();\n      });\n\n      _this._disposables = [];\n    };\n\n    _this._onKeyDown = function (event) {\n      var value;\n\n      if (_this._isAdjustingLowerValue) {\n        value = _this.props.lowerValue || _this.state.lowerValue;\n      } else {\n        value = _this.props.value || _this.state.value;\n      }\n\n      var _a = _this.props,\n          max = _a.max,\n          min = _a.min,\n          step = _a.step;\n      var diff = 0; // eslint-disable-next-line deprecation/deprecation\n\n      switch (event.which) {\n        case getRTLSafeKeyCode(KeyCodes.left, _this.props.theme):\n        case KeyCodes.down:\n          diff = -step;\n\n          _this._clearOnKeyDownTimer();\n\n          _this._setOnKeyDownTimer(event);\n\n          break;\n\n        case getRTLSafeKeyCode(KeyCodes.right, _this.props.theme):\n        case KeyCodes.up:\n          diff = step;\n\n          _this._clearOnKeyDownTimer();\n\n          _this._setOnKeyDownTimer(event);\n\n          break;\n\n        case KeyCodes.home:\n          value = min;\n          break;\n\n        case KeyCodes.end:\n          value = max;\n          break;\n\n        default:\n          return;\n      }\n\n      var newValue = Math.min(max, Math.max(min, value + diff));\n\n      _this._updateValue(newValue, newValue);\n\n      event.preventDefault();\n      event.stopPropagation(); // Disable renderedValue override.\n\n      _this.setState({\n        renderedValue: undefined,\n        renderedLowerValue: undefined\n      });\n    };\n\n    _this._onThumbFocus = function (event) {\n      _this._isAdjustingLowerValue = event.target === _this._lowerValueThumb.current;\n    };\n\n    _this._clearOnKeyDownTimer = function () {\n      _this._async.clearTimeout(_this._onKeyDownTimer);\n    };\n\n    _this._setOnKeyDownTimer = function (event) {\n      _this._onKeyDownTimer = _this._async.setTimeout(function () {\n        if (_this.props.onChanged) {\n          _this.props.onChanged(event, _this.state.value);\n        }\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    };\n\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    warnMutuallyExclusive(COMPONENT_NAME, _this.props, {\n      value: 'defaultValue'\n    });\n\n    if (props.ranged) {\n      warnMutuallyExclusive(COMPONENT_NAME, _this.props, {\n        lowerValue: 'defaultLowerValue'\n      });\n    }\n\n    _this._id = getId('Slider');\n    var value = props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n    var lowerValue = props.lowerValue !== undefined ? props.lowerValue : props.defaultLowerValue !== undefined ? props.defaultLowerValue : props.min;\n    _this.state = {\n      value: value,\n      lowerValue: lowerValue,\n      renderedValue: undefined,\n      renderedLowerValue: undefined\n    };\n    return _this;\n  }\n\n  SliderBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._disposeListeners();\n  };\n\n  SliderBase.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        ariaLabel = _d.ariaLabel,\n        className = _d.className,\n        disabled = _d.disabled,\n        label = _d.label,\n        max = _d.max,\n        min = _d.min,\n        showValue = _d.showValue,\n        buttonProps = _d.buttonProps,\n        vertical = _d.vertical,\n        styles = _d.styles,\n        theme = _d.theme,\n        originFromZero = _d.originFromZero,\n        ranged = _d.ranged;\n    var value = this.value;\n    var renderedValue = this.renderedValue;\n    var renderedLowerValue = this.renderedLowerValue;\n\n    var thumbOffsetPercent = this._getPercent(renderedValue);\n\n    var lowerThumbOffsetPercent = this._getPercent(renderedLowerValue);\n\n    var originValue = originFromZero ? 0 : min;\n\n    var originPercent = this._getPercent(originValue);\n\n    var activeSectionWidth = ranged ? thumbOffsetPercent - lowerThumbOffsetPercent : Math.abs(originPercent - thumbOffsetPercent);\n    var topSectionWidth = Math.min(100 - thumbOffsetPercent, 100 - originPercent);\n    var bottomSectionWidth = ranged ? lowerThumbOffsetPercent : Math.min(thumbOffsetPercent, originPercent);\n    var lengthString = vertical ? 'height' : 'width';\n    var onMouseDownProp = disabled ? {} : {\n      onMouseDown: this._onMouseDownOrTouchStart\n    };\n    var onTouchStartProp = disabled ? {} : {\n      onTouchStart: this._onMouseDownOrTouchStart\n    };\n    var onKeyDownProp = disabled ? {} : {\n      onKeyDown: this._onKeyDown\n    };\n    var onFocusProp = disabled ? {} : {\n      onFocus: this._onThumbFocus\n    };\n    var classNames = getClassNames(styles, {\n      className: className,\n      ranged: ranged,\n      disabled: disabled,\n      vertical: vertical,\n      showTransitions: renderedValue === value || ranged && renderedLowerValue === this.lowerValue,\n      showValue: showValue,\n      theme: theme\n    });\n    var divButtonProps = buttonProps ? getNativeProps(buttonProps, divProperties) : undefined;\n    var sliderProps = {\n      'aria-disabled': disabled,\n      role: 'slider',\n      tabIndex: disabled ? undefined : 0,\n      'data-is-focusable': !disabled\n    };\n\n    var sliderBoxProps = __assign(__assign(__assign(__assign(__assign({\n      id: this._id,\n      className: css(classNames.slideBox, buttonProps.className)\n    }, onMouseDownProp), onTouchStartProp), onKeyDownProp), divButtonProps), !ranged && __assign(__assign({}, sliderProps), {\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': this._getAriaValueText(value),\n      'aria-label': ariaLabel || label\n    }));\n\n    var thumbProps = ranged ? __assign(__assign(__assign({}, sliderProps), onFocusProp), {\n      id: \"max-\" + this._id,\n      'aria-valuemin': this.lowerValue,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': this._getAriaValueText(value),\n      'aria-label': \"max \" + (ariaLabel || label)\n    }) : undefined;\n    var lowerValueThumbProps = ranged ? __assign(__assign(__assign({}, sliderProps), onFocusProp), {\n      id: \"min-\" + this._id,\n      'aria-valuemin': min,\n      'aria-valuemax': value,\n      'aria-valuenow': this.lowerValue,\n      'aria-valuetext': this._getAriaValueText(this.lowerValue),\n      'aria-label': \"min \" + (ariaLabel || label)\n    }) : undefined;\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, label && React.createElement(Label, __assign({\n      className: classNames.titleLabel\n    }, ariaLabel ? {} : {\n      htmlFor: this._id\n    }, {\n      disabled: disabled\n    }), label), React.createElement(\"div\", {\n      className: classNames.container\n    }, ranged && showValue && React.createElement(Label, {\n      className: classNames.valueLabel,\n      disabled: disabled\n    }, this._getValueLabel(vertical ? this.value : this.lowerValue)), React.createElement(\"div\", __assign({}, sliderBoxProps), React.createElement(\"div\", {\n      ref: this._sliderLine,\n      className: classNames.line\n    }, originFromZero && React.createElement(\"span\", {\n      className: css(classNames.zeroTick),\n      style: this._getStyleUsingOffsetPercent(vertical, originPercent)\n    }), ranged && React.createElement(\"span\", __assign({\n      ref: this._lowerValueThumb,\n      className: classNames.thumb,\n      style: this._getStyleUsingOffsetPercent(vertical, lowerThumbOffsetPercent)\n    }, lowerValueThumbProps)), React.createElement(\"span\", __assign({\n      ref: this._thumb,\n      className: classNames.thumb,\n      style: this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)\n    }, thumbProps)), (ranged || originFromZero) && React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_a = {}, _a[lengthString] = bottomSectionWidth + '%', _a)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.activeSection),\n      style: (_b = {}, _b[lengthString] = activeSectionWidth + '%', _b)\n    }), React.createElement(\"span\", {\n      className: css(classNames.lineContainer, classNames.inactiveSection),\n      style: (_c = {}, _c[lengthString] = topSectionWidth + '%', _c)\n    }))), showValue && React.createElement(Label, {\n      className: classNames.valueLabel,\n      disabled: disabled\n    }, this._getValueLabel(ranged && vertical ? this.lowerValue : this.value))), React.createElement(FocusRects, null));\n  };\n\n  SliderBase.prototype.focus = function () {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  };\n\n  Object.defineProperty(SliderBase.prototype, \"range\", {\n    get: function () {\n      if (this.props.ranged) {\n        return [this.lowerValue, this.value];\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"value\", {\n    get: function () {\n      var _a = this.props.value,\n          value = _a === void 0 ? this.state.value : _a;\n\n      if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n        return undefined;\n      } else {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"renderedValue\", {\n    get: function () {\n      // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n      // Fall back to `value`.\n      var _a = this.state.renderedValue,\n          renderedValue = _a === void 0 ? this.value : _a;\n      return renderedValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"lowerValue\", {\n    get: function () {\n      var _a = this.props,\n          _b = _a.lowerValue,\n          lowerValue = _b === void 0 ? this.state.lowerValue : _b,\n          ranged = _a.ranged;\n\n      if (!ranged || this.props.min === undefined || this.props.max === undefined || lowerValue === undefined) {\n        return undefined;\n      } else {\n        return Math.max(this.props.min, Math.min(this.props.max, lowerValue));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SliderBase.prototype, \"renderedLowerValue\", {\n    get: function () {\n      // renderedLowerValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n      // Fall back to `lowerValue`.\n      var _a = this.state.renderedLowerValue,\n          renderedLowerValue = _a === void 0 ? this.lowerValue : _a;\n      return renderedLowerValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SliderBase.prototype._getPercent = function (value) {\n    var _a = this.props,\n        min = _a.min,\n        max = _a.max;\n    return max === min ? 0 : (value - min) / (max - min) * 100;\n  };\n\n  SliderBase.prototype._getValueLabel = function (value) {\n    var valueFormat = this.props.valueFormat;\n    return valueFormat ? valueFormat(value) : value;\n  };\n\n  SliderBase.prototype._getStyleUsingOffsetPercent = function (vertical, thumbOffsetPercent) {\n    var _a;\n\n    var direction = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return _a = {}, _a[direction] = thumbOffsetPercent + '%', _a;\n  };\n\n  SliderBase.prototype._getPosition = function (event, vertical) {\n    var currentPosition;\n\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? event.clientX : event.clientY;\n        break;\n\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n\n    return currentPosition;\n  };\n\n  SliderBase.prototype._setValueState = function (roundedValue, renderedValue) {\n    var _a;\n\n    var _this = this;\n\n    var isAdjustingLowerValue = this._isAdjustingLowerValue;\n    var valueChanged = roundedValue !== (isAdjustingLowerValue ? this.state.lowerValue : this.state.value);\n    this.setState((_a = {}, _a[isAdjustingLowerValue ? 'lowerValue' : 'value'] = roundedValue, _a[isAdjustingLowerValue ? 'renderedLowerValue' : 'renderedValue'] = renderedValue, _a), function () {\n      var _a = _this.state,\n          lowerValue = _a.lowerValue,\n          value = _a.value;\n\n      if (valueChanged && _this.props.onChange) {\n        _this.props.onChange(isAdjustingLowerValue ? lowerValue : value, _this.props.ranged ? [lowerValue, value] : undefined);\n      }\n    });\n  };\n\n  SliderBase.prototype._updateValue = function (value, renderedValue) {\n    var _a = this.props,\n        step = _a.step,\n        snapToStep = _a.snapToStep,\n        ranged = _a.ranged,\n        originFromZero = _a.originFromZero;\n    var numDec = 0;\n\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    } // Make sure value has correct number of decimal places based on number of decimals in step\n\n\n    var roundedValue = parseFloat(value.toFixed(numDec));\n\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n\n    var shouldAdjustLowerThumb = this._isAdjustingLowerValue && (originFromZero ? roundedValue <= 0 : roundedValue <= this.renderedValue);\n    var shouldAdjustUpperThumb = !this._isAdjustingLowerValue && (originFromZero ? roundedValue >= 0 : roundedValue >= this.renderedLowerValue);\n\n    if (!ranged || shouldAdjustLowerThumb || shouldAdjustUpperThumb) {\n      this._setValueState(roundedValue, renderedValue);\n    }\n  };\n\n  SliderBase.defaultProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false\n  };\n  return SliderBase;\n}(React.Component);\n\nexport { SliderBase };","map":{"version":3,"sources":["components/Slider/Slider.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SACE,QADF,EAEE,GAFF,EAGE,KAHF,EAIE,MAJF,EAKE,iBALF,EAME,qBANF,EAOE,sBAPF,EAQE,KARF,EASE,EATF,EAUE,UAVF,QAWO,iBAXP;AAaA,SAAS,kBAAT,EAA6B,cAA7B,EAA6C,aAA7C,QAAkE,iBAAlE;AACA,SAAS,KAAT,QAAsB,aAAtB;AASA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AACA,IAAM,cAAc,GAAG,YAAvB;AACA,OAAO,IAAM,0BAA0B,GAAG,IAAnC;;AAEP,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAqB9B,WAAA,UAAA,CAAY,KAAZ,EAA+B;AAA/B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AARQ,IAAA,KAAA,CAAA,YAAA,GAA+B,EAA/B;AACA,IAAA,KAAA,CAAA,WAAA,GAAc,KAAK,CAAC,SAAN,EAAd;AACA,IAAA,KAAA,CAAA,MAAA,GAAS,KAAK,CAAC,SAAN,EAAT;AACA,IAAA,KAAA,CAAA,gBAAA,GAAmB,KAAK,CAAC,SAAN,EAAnB;AAEA,IAAA,KAAA,CAAA,eAAA,GAAkB,CAAC,CAAnB;AACA,IAAA,KAAA,CAAA,sBAAA,GAAyB,KAAzB;;AAkQA,IAAA,KAAA,CAAA,iBAAA,GAAoB,UAAC,KAAD,EAA0B;AAC5C,UAAA,aAAA,GAAA,KAAA,CAAA,KAAA,CAAA,aAAA;;AACR,UAAI,KAAK,KAAK,SAAd,EAAyB;AACvB,eAAO,aAAa,GAAG,aAAa,CAAC,KAAD,CAAhB,GAA0B,KAAK,CAAC,QAAN,EAA9C;AACD;;AACD,aAAO,SAAP;AACD,KANO;;AAeA,IAAA,KAAA,CAAA,sBAAA,GAAyB,UAAC,KAAD,EAA+B;AAC9D,UAAI,CAAC,KAAI,CAAC,WAAL,CAAiB,OAAtB,EAA+B;AAC7B;AACD;;AAEK,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,GAAA,GAAA,EAAA,CAAA,GAAF;AAAA,UAAO,GAAA,GAAA,EAAA,CAAA,GAAP;AAAA,UAAY,IAAA,GAAA,EAAA,CAAA,IAAZ;AACN,UAAM,KAAK,GAAW,CAAC,GAAI,GAAG,GAAR,IAAgB,IAAtC;;AACA,UAAM,kBAAkB,GAAe,KAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,qBAAzB,EAAvC;;AACA,UAAM,YAAY,GAAW,CAAC,KAAI,CAAC,KAAL,CAAW,QAAZ,GAAuB,kBAAkB,CAAC,KAA1C,GAAkD,kBAAkB,CAAC,MAAlG;AACA,UAAM,UAAU,GAAW,YAAY,GAAG,KAA1C;AACA,UAAI,YAAJ;AACA,UAAI,QAAJ;;AAEA,UAAI,CAAC,KAAI,CAAC,KAAL,CAAW,QAAhB,EAA0B;AACxB,YAAM,IAAI,GAAuB,KAAI,CAAC,YAAL,CAAkB,KAAlB,EAAyB,KAAI,CAAC,KAAL,CAAW,QAApC,CAAjC;;AACA,QAAA,QAAQ,GAAG,MAAM,CAAC,KAAI,CAAC,KAAL,CAAW,KAAZ,CAAN,GAA2B,kBAAkB,CAAC,KAAnB,GAA2B,IAAtD,GAA8D,IAAK,GAAG,kBAAkB,CAAC,IAApG;AACA,QAAA,YAAY,GAAG,QAAQ,GAAG,UAA1B;AACD,OAJD,MAIO;AACL,YAAM,MAAM,GAAuB,KAAI,CAAC,YAAL,CAAkB,KAAlB,EAAyB,KAAI,CAAC,KAAL,CAAW,QAApC,CAAnC;;AACA,QAAA,QAAQ,GAAG,kBAAkB,CAAC,MAAnB,GAA4B,MAAvC;AACA,QAAA,YAAY,GAAG,QAAQ,GAAG,UAA1B;AACD;;AAED,aAAO,YAAP;AACD,KAxBO;;AA0BA,IAAA,KAAA,CAAA,wBAAA,GAA2B,UAAC,KAAD,EAA+B;AAC1D,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,UAAU,GAAA,GAAA,EAAA,CAAA,GAAV;AAAA,UAAe,IAAA,GAAA,EAAA,CAAA,IAAf;;AACN,UAAI,MAAJ,EAAY;AACV,YAAM,YAAY,GAAG,KAAI,CAAC,sBAAL,CAA4B,KAA5B,CAArB;;AACA,YAAM,gBAAgB,GAAG,GAAI,GAAG,IAAK,GAAG,YAAxC;;AAEA,YACE,gBAAgB,IAAK,KAAI,CAAC,KAAL,CAAW,UAAhC,IACA,gBAAgB,GAAI,KAAI,CAAC,KAAL,CAAW,UAA/B,IAAyD,KAAI,CAAC,KAAL,CAAW,KAAX,GAA8B,gBAFzF,EAGE;AACA,UAAA,KAAI,CAAC,sBAAL,GAA8B,IAA9B;AACD,SALD,MAKO;AACL,UAAA,KAAI,CAAC,sBAAL,GAA8B,KAA9B;AACD;AACF;;AACD,UAAI,KAAK,CAAC,IAAN,KAAe,WAAnB,EAAgC;AAC9B,QAAA,KAAI,CAAC,YAAL,CAAkB,IAAlB,CACE,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,KAAI,CAAC,uBAA3B,EAAoD,IAApD,CADJ,EAEE,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,KAAI,CAAC,oBAAzB,EAA+C,IAA/C,CAFJ;AAID,OALD,MAKO,IAAI,KAAK,CAAC,IAAN,KAAe,YAAnB,EAAiC;AACtC,QAAA,KAAI,CAAC,YAAL,CAAkB,IAAlB,CACE,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,KAAI,CAAC,uBAA3B,EAAoD,IAApD,CADJ,EAEE,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,KAAI,CAAC,oBAA1B,EAAgD,IAAhD,CAFJ;AAID;;AACD,MAAA,KAAI,CAAC,uBAAL,CAA6B,KAA7B,EAAoC,IAApC;AACD,KA3BO;;AA6BA,IAAA,KAAA,CAAA,uBAAA,GAA0B,UAAC,KAAD,EAAiC,wBAAjC,EAAmE;AACnG,UAAI,CAAC,KAAI,CAAC,WAAL,CAAiB,OAAtB,EAA+B;AAC7B;AACD;;AAEK,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,GAAA,GAAA,EAAA,CAAA,GAAF;AAAA,UAAO,GAAA,GAAA,EAAA,CAAA,GAAP;AAAA,UAAY,IAAA,GAAA,EAAA,CAAA,IAAZ;AACN,UAAM,KAAK,GAAW,CAAC,GAAI,GAAG,GAAR,IAAgB,IAAtC;;AACA,UAAM,YAAY,GAAG,KAAI,CAAC,sBAAL,CAA4B,KAA5B,CAArB;;AAEA,UAAI,YAAJ;AACA,UAAI,aAAJ,CAVmG,CAYnG;;AACA,UAAI,YAAa,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,CAApB,EAAuC;AACrC,QAAA,aAAa,GAAG,YAAY,GAAG,GAA/B;AACD,OAFD,MAEO,IAAI,YAAa,GAAG,CAApB,EAAuB;AAC5B,QAAA,aAAa,GAAG,YAAY,GAAG,GAA/B;AACD,OAFM,MAEA;AACL,QAAA,aAAa,GAAG,GAAI,GAAG,IAAK,GAAG,YAA/B;AACA,QAAA,YAAY,GAAG,GAAI,GAAG,IAAK,GAAG,IAAI,CAAC,KAAL,CAAW,YAAX,CAA9B;AACD;;AAED,MAAA,KAAI,CAAC,YAAL,CAAkB,YAAlB,EAAgC,aAAhC;;AAEA,UAAI,CAAC,wBAAL,EAA+B;AAC7B,QAAA,KAAK,CAAC,cAAN;AACA,QAAA,KAAK,CAAC,eAAN;AACD;AACF,KA5BO;;AA6FA,IAAA,KAAA,CAAA,oBAAA,GAAuB,UAAC,KAAD,EAA+B;AAC5D;AACA,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,aAAa,EAAE,SADH;AAEZ,QAAA,kBAAkB,EAAE;AAFR,OAAd;;AAKA,UAAI,KAAI,CAAC,KAAL,CAAW,SAAf,EAA0B;AACxB,QAAA,KAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,KAArB,EAA4B,KAAI,CAAC,KAAL,CAAW,KAAvC;AACD;;AAED,MAAA,KAAI,CAAC,iBAAL;AACD,KAZO;;AAcA,IAAA,KAAA,CAAA,iBAAA,GAAoB,YAAA;AAC1B,MAAA,KAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,UAAA,OAAA,EAAO;AAAI,eAAA,OAAA,EAAA;AAAS,OAA9C;;AACA,MAAA,KAAI,CAAC,YAAL,GAAoB,EAApB;AACD,KAHO;;AAKA,IAAA,KAAA,CAAA,UAAA,GAAa,UAAC,KAAD,EAAqB;AACxC,UAAI,KAAJ;;AACA,UAAI,KAAI,CAAC,sBAAT,EAAiC;AAC/B,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,KAAI,CAAC,KAAL,CAAW,UAA5C;AACD,OAFD,MAEO;AACL,QAAA,KAAK,GAAG,KAAI,CAAC,KAAL,CAAW,KAAX,IAAoB,KAAI,CAAC,KAAL,CAAW,KAAvC;AACD;;AACK,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,GAAA,GAAA,EAAA,CAAA,GAAF;AAAA,UAAO,GAAA,GAAA,EAAA,CAAA,GAAP;AAAA,UAAY,IAAA,GAAA,EAAA,CAAA,IAAZ;AAEN,UAAI,IAAI,GAAuB,CAA/B,CATwC,CAWxC;;AACA,cAAQ,KAAK,CAAC,KAAd;AACE,aAAK,iBAAiB,CAAC,QAAQ,CAAC,IAAV,EAAgB,KAAI,CAAC,KAAL,CAAW,KAA3B,CAAtB;AACA,aAAK,QAAQ,CAAC,IAAd;AACE,UAAA,IAAI,GAAG,CAAE,IAAT;;AAEA,UAAA,KAAI,CAAC,oBAAL;;AACA,UAAA,KAAI,CAAC,kBAAL,CAAwB,KAAxB;;AAEA;;AACF,aAAK,iBAAiB,CAAC,QAAQ,CAAC,KAAV,EAAiB,KAAI,CAAC,KAAL,CAAW,KAA5B,CAAtB;AACA,aAAK,QAAQ,CAAC,EAAd;AACE,UAAA,IAAI,GAAG,IAAP;;AAEA,UAAA,KAAI,CAAC,oBAAL;;AACA,UAAA,KAAI,CAAC,kBAAL,CAAwB,KAAxB;;AAEA;;AAEF,aAAK,QAAQ,CAAC,IAAd;AACE,UAAA,KAAK,GAAG,GAAR;AACA;;AAEF,aAAK,QAAQ,CAAC,GAAd;AACE,UAAA,KAAK,GAAG,GAAR;AACA;;AAEF;AACE;AA3BJ;;AA8BA,UAAM,QAAQ,GAAW,IAAI,CAAC,GAAL,CAAS,GAAT,EAAwB,IAAI,CAAC,GAAL,CAAS,GAAT,EAAwB,KAAM,GAAG,IAAjC,CAAxB,CAAzB;;AACA,MAAA,KAAI,CAAC,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;;AAEA,MAAA,KAAK,CAAC,cAAN;AACA,MAAA,KAAK,CAAC,eAAN,GA9CwC,CAgDxC;;AACA,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,aAAa,EAAE,SADH;AAEZ,QAAA,kBAAkB,EAAE;AAFR,OAAd;AAID,KArDO;;AAuDA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,KAAD,EAA+B;AACrD,MAAA,KAAI,CAAC,sBAAL,GAA8B,KAAK,CAAC,MAAN,KAAiB,KAAI,CAAC,gBAAL,CAAsB,OAArE;AACD,KAFO;;AAIA,IAAA,KAAA,CAAA,oBAAA,GAAuB,YAAA;AAC7B,MAAA,KAAI,CAAC,MAAL,CAAY,YAAZ,CAAyB,KAAI,CAAC,eAA9B;AACD,KAFO;;AAIA,IAAA,KAAA,CAAA,kBAAA,GAAqB,UAAC,KAAD,EAAqB;AAChD,MAAA,KAAI,CAAC,eAAL,GAAuB,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AAC5C,YAAI,KAAI,CAAC,KAAL,CAAW,SAAf,EAA0B;AACxB,UAAA,KAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,KAArB,EAA4B,KAAI,CAAC,KAAL,CAAW,KAAvC;AACD;AACF,OAJsB,EAIpB,0BAJoB,CAAvB;AAKD,KANO;;AAlfN,IAAA,KAAI,CAAC,MAAL,GAAc,IAAI,KAAJ,CAAU,KAAV,CAAd;AACA,IAAA,sBAAsB,CAAC,KAAD,CAAtB;AAEA,IAAA,qBAAqB,CAAC,cAAD,EAAiB,KAAI,CAAC,KAAtB,EAA6B;AAChD,MAAA,KAAK,EAAE;AADyC,KAA7B,CAArB;;AAIA,QAAI,KAAK,CAAC,MAAV,EAAkB;AAChB,MAAA,qBAAqB,CAAC,cAAD,EAAiB,KAAI,CAAC,KAAtB,EAA6B;AAChD,QAAA,UAAU,EAAE;AADoC,OAA7B,CAArB;AAGD;;AAED,IAAA,KAAI,CAAC,GAAL,GAAW,KAAK,CAAC,QAAD,CAAhB;AAEA,QAAM,KAAK,GACT,KAAK,CAAC,KAAN,KAAgB,SAAhB,GAA4B,KAAK,CAAC,KAAlC,GAA0C,KAAK,CAAC,YAAN,KAAuB,SAAvB,GAAmC,KAAK,CAAC,YAAzC,GAAwD,KAAK,CAAC,GAD1G;AAGA,QAAM,UAAU,GACd,KAAK,CAAC,UAAN,KAAqB,SAArB,GACI,KAAK,CAAC,UADV,GAEI,KAAK,CAAC,iBAAN,KAA4B,SAA5B,GACA,KAAK,CAAC,iBADN,GAEA,KAAK,CAAC,GALZ;AAOA,IAAA,KAAI,CAAC,KAAL,GAAa;AACX,MAAA,KAAK,EAAE,KADI;AAEX,MAAA,UAAU,EAAE,UAFD;AAGX,MAAA,aAAa,EAAE,SAHJ;AAIX,MAAA,kBAAkB,EAAE;AAJT,KAAb;;AAMD;;AAEM,EAAA,UAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;AACE,SAAK,MAAL,CAAY,OAAZ;;AACA,SAAK,iBAAL;AACD,GAHM;;AAKA,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QACJ,SAAA,GAAA,EAAA,CAAA,SADI;AAAA,QAEJ,SAAA,GAAA,EAAA,CAAA,SAFI;AAAA,QAGJ,QAAA,GAAA,EAAA,CAAA,QAHI;AAAA,QAIJ,KAAA,GAAA,EAAA,CAAA,KAJI;AAAA,QAKJ,GAAA,GAAA,EAAA,CAAA,GALI;AAAA,QAMJ,GAAA,GAAA,EAAA,CAAA,GANI;AAAA,QAOJ,SAAA,GAAA,EAAA,CAAA,SAPI;AAAA,QAQJ,WAAA,GAAA,EAAA,CAAA,WARI;AAAA,QASJ,QAAA,GAAA,EAAA,CAAA,QATI;AAAA,QAUJ,MAAA,GAAA,EAAA,CAAA,MAVI;AAAA,QAWJ,KAAA,GAAA,EAAA,CAAA,KAXI;AAAA,QAYJ,cAAA,GAAA,EAAA,CAAA,cAZI;AAAA,QAaJ,MAAA,GAAA,EAAA,CAAA,MAbI;AAeN,QAAM,KAAK,GAAG,KAAK,KAAnB;AACA,QAAM,aAAa,GAAG,KAAK,aAA3B;AACA,QAAM,kBAAkB,GAAG,KAAK,kBAAhC;;AACA,QAAM,kBAAkB,GAAW,KAAK,WAAL,CAAiB,aAAjB,CAAnC;;AACA,QAAM,uBAAuB,GAAW,KAAK,WAAL,CAAiB,kBAAjB,CAAxC;;AACA,QAAM,WAAW,GAAG,cAAc,GAAG,CAAH,GAAO,GAAzC;;AAEA,QAAM,aAAa,GAAG,KAAK,WAAL,CAAiB,WAAjB,CAAtB;;AACA,QAAM,kBAAkB,GAAG,MAAM,GAC7B,kBAAkB,GAAG,uBADQ,GAE7B,IAAI,CAAC,GAAL,CAAS,aAAa,GAAG,kBAAzB,CAFJ;AAGA,QAAM,eAAe,GAAG,IAAI,CAAC,GAAL,CAAS,MAAM,kBAAf,EAAmC,MAAM,aAAzC,CAAxB;AACA,QAAM,kBAAkB,GAAG,MAAM,GAAG,uBAAH,GAA6B,IAAI,CAAC,GAAL,CAAS,kBAAT,EAA6B,aAA7B,CAA9D;AAEA,QAAM,YAAY,GAAG,QAAQ,GAAG,QAAH,GAAc,OAA3C;AACA,QAAM,eAAe,GAAO,QAAQ,GAAG,EAAH,GAAQ;AAAE,MAAA,WAAW,EAAE,KAAK;AAApB,KAA5C;AACA,QAAM,gBAAgB,GAAO,QAAQ,GAAG,EAAH,GAAQ;AAAE,MAAA,YAAY,EAAE,KAAK;AAArB,KAA7C;AACA,QAAM,aAAa,GAAO,QAAQ,GAAG,EAAH,GAAQ;AAAE,MAAA,SAAS,EAAE,KAAK;AAAlB,KAA1C;AACA,QAAM,WAAW,GAAO,QAAQ,GAAG,EAAH,GAAQ;AAAE,MAAA,OAAO,EAAE,KAAK;AAAhB,KAAxC;AAEA,QAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,MAAA,SAAS,EAAA,SAD8B;AAEvC,MAAA,MAAM,EAAA,MAFiC;AAGvC,MAAA,QAAQ,EAAA,QAH+B;AAIvC,MAAA,QAAQ,EAAA,QAJ+B;AAKvC,MAAA,eAAe,EAAE,aAAa,KAAK,KAAlB,IAA4B,MAAM,IAAI,kBAAkB,KAAK,KAAK,UAL5C;AAMvC,MAAA,SAAS,EAAA,SAN8B;AAOvC,MAAA,KAAK,EAAE;AAPgC,KAAT,CAAhC;AASA,QAAM,cAAc,GAAG,WAAW,GAC9B,cAAc,CAAuC,WAAvC,EAAoD,aAApD,CADgB,GAE9B,SAFJ;AAIA,QAAM,WAAW,GAAG;AAClB,uBAAiB,QADC;AAElB,MAAA,IAAI,EAAE,QAFY;AAGlB,MAAA,QAAQ,EAAE,QAAQ,GAAG,SAAH,GAAe,CAHf;AAIlB,2BAAqB,CAAC;AAJJ,KAApB;;AAOA,QAAM,cAAc,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA;AAClB,MAAA,EAAE,EAAE,KAAK,GADS;AAElB,MAAA,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,QAAZ,EAAsB,WAAY,CAAC,SAAnC;AAFI,KAAA,EAGf,eAHe,CAAA,EAIf,gBAJe,CAAA,EAKf,aALe,CAAA,EAMf,cANe,CAAA,EAOd,CAAC,MAAD,IAAO,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,WADM,CAAA,EACK;AACd,uBAAiB,GADH;AAEd,uBAAiB,GAFH;AAGd,uBAAiB,KAHH;AAId,wBAAkB,KAAK,iBAAL,CAAuB,KAAvB,CAJJ;AAKd,oBAAc,SAAS,IAAI;AALb,KADL,CAPO,CAApB;;AAiBA,QAAM,UAAU,GAAG,MAAM,GACtB,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACM,WADN,CAAA,EAEM,WAFN,CAAA,EAEiB;AACd,MAAA,EAAE,EAAE,SAAO,KAAK,GADF;AAEd,uBAAiB,KAAK,UAFR;AAGd,uBAAiB,GAHH;AAId,uBAAiB,KAJH;AAKd,wBAAkB,KAAK,iBAAL,CAAuB,KAAvB,CALJ;AAMd,oBAAc,UAAO,SAAS,IAAI,KAApB;AANA,KAFjB,CADsB,GAWrB,SAXJ;AAaA,QAAM,oBAAoB,GAAG,MAAM,GAChC,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACM,WADN,CAAA,EAEM,WAFN,CAAA,EAEiB;AACd,MAAA,EAAE,EAAE,SAAO,KAAK,GADF;AAEd,uBAAiB,GAFH;AAGd,uBAAiB,KAHH;AAId,uBAAiB,KAAK,UAJR;AAKd,wBAAkB,KAAK,iBAAL,CAAuB,KAAK,UAA5B,CALJ;AAMd,oBAAc,UAAO,SAAS,IAAI,KAApB;AANA,KAFjB,CADgC,GAW/B,SAXJ;AAaA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACG,KAAK,IACJ,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA;AAAC,MAAA,SAAS,EAAE,UAAU,CAAC;AAAvB,KAAA,EAAwC,SAAS,GAAG,EAAH,GAAQ;AAAE,MAAA,OAAO,EAAE,KAAK;AAAhB,KAAzD,EAA+E;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAA/E,CAAN,EACG,KADH,CAFJ,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACG,MAAM,IAAI,SAAV,IACC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,MAAA,SAAS,EAAE,UAAU,CAAC,UAAvB;AAAmC,MAAA,QAAQ,EAAE;AAA7C,KAAN,EACG,KAAK,cAAL,CAAoB,QAAQ,GAAG,KAAK,KAAR,GAAiB,KAAK,UAAlD,CADH,CAFJ,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,cAAT,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAE,KAAK,WAAf;AAA4B,MAAA,SAAS,EAAE,UAAU,CAAC;AAAlD,KAAA,EACG,cAAc,IACb,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,QAAZ,CADhB;AAEE,MAAA,KAAK,EAAE,KAAK,2BAAL,CAAiC,QAAjC,EAA2C,aAA3C;AAFT,KAAA,CAFJ,EAOG,MAAM,IACL,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AACE,MAAA,GAAG,EAAE,KAAK,gBADZ;AAEE,MAAA,SAAS,EAAE,UAAU,CAAC,KAFxB;AAGE,MAAA,KAAK,EAAE,KAAK,2BAAL,CAAiC,QAAjC,EAA2C,uBAA3C;AAHT,KAAA,EAIM,oBAJN,CAAA,CARJ,EAeE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AACE,MAAA,GAAG,EAAE,KAAK,MADZ;AAEE,MAAA,SAAS,EAAE,UAAU,CAAC,KAFxB;AAGE,MAAA,KAAK,EAAE,KAAK,2BAAL,CAAiC,QAAjC,EAA2C,kBAA3C;AAHT,KAAA,EAIM,UAJN,CAAA,CAfF,EAqBG,CAAC,MAAM,IAAI,cAAX,KACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,aAAZ,EAA2B,UAAU,CAAC,eAAtC,CADhB;AAEE,MAAA,KAAK,GAAA,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,YAAD,CAAA,GAAgB,kBAAkB,GAAG,GAAzC,EAA4C,EAA5C;AAFP,KAAA,CAtBJ,EA2BE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,aAAZ,EAA2B,UAAU,CAAC,aAAtC,CADhB;AAEE,MAAA,KAAK,GAAA,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,YAAD,CAAA,GAAgB,kBAAkB,GAAG,GAAzC,EAA4C,EAA5C;AAFP,KAAA,CA3BF,EA+BE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,aAAZ,EAA2B,UAAU,CAAC,eAAtC,CADhB;AAEE,MAAA,KAAK,GAAA,EAAA,GAAA,EAAA,EAAI,EAAA,CAAC,YAAD,CAAA,GAAgB,eAAe,GAAG,GAAtC,EAAyC,EAAzC;AAFP,KAAA,CA/BF,CADF,CANF,EA4CG,SAAS,IACR,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,MAAA,SAAS,EAAE,UAAU,CAAC,UAAvB;AAAmC,MAAA,QAAQ,EAAE;AAA7C,KAAN,EACG,KAAK,cAAL,CAAoB,MAAM,IAAI,QAAV,GAAqB,KAAK,UAA1B,GAAwC,KAAK,KAAjE,CADH,CA7CJ,CANF,EAwDE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CAxDF,CADF;AA4DD,GA/JM;;AAiKA,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAI,KAAK,MAAL,CAAY,OAAhB,EAAyB;AACvB,WAAK,MAAL,CAAY,OAAZ,CAAoB,KAApB;AACD;AACF,GAJM;;AAMP,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,UAAI,KAAK,KAAL,CAAW,MAAf,EAAuB;AACrB,eAAO,CAAC,KAAK,UAAN,EAAmB,KAAK,KAAxB,CAAP;AACD;AACF,KAJe;oBAAA;;AAAA,GAAhB;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACU,UAAA,EAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AAAA,UAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,KAAA,CAAA,KAAA,GAAA,EAAA;;AACR,UAAI,KAAK,KAAL,CAAW,GAAX,KAAmB,SAAnB,IAAgC,KAAK,KAAL,CAAW,GAAX,KAAmB,SAAnD,IAAgE,KAAK,KAAK,SAA9E,EAAyF;AACvF,eAAO,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,GAApB,EAAyB,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,GAApB,EAAyB,KAAzB,CAAzB,CAAP;AACD;AACF,KAPe;oBAAA;;AAAA,GAAhB;AASA,EAAA,MAAA,CAAA,cAAA,CAAY,UAAA,CAAA,SAAZ,EAAY,eAAZ,EAAyB;SAAzB,YAAA;AACE;AACA;AACQ,UAAA,EAAA,GAAA,KAAA,KAAA,CAAA,aAAA;AAAA,UAAA,aAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,KAAA,GAAA,EAAA;AACR,aAAO,aAAP;AACD,KALwB;oBAAA;;AAAA,GAAzB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;SAArB,YAAA;AACQ,UAAA,EAAA,GAAA,KAAA,KAAA;AAAA,UAAE,EAAA,GAAA,EAAA,CAAA,UAAF;AAAA,UAAE,UAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,KAAA,CAAA,UAAA,GAAA,EAAF;AAAA,UAAsC,MAAA,GAAA,EAAA,CAAA,MAAtC;;AACN,UAAI,CAAC,MAAD,IAAW,KAAK,KAAL,CAAW,GAAX,KAAmB,SAA9B,IAA2C,KAAK,KAAL,CAAW,GAAX,KAAmB,SAA9D,IAA2E,UAAU,KAAK,SAA9F,EAAyG;AACvG,eAAO,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,GAApB,EAAyB,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,GAApB,EAAyB,UAAzB,CAAzB,CAAP;AACD;AACF,KAPoB;oBAAA;;AAAA,GAArB;AASA,EAAA,MAAA,CAAA,cAAA,CAAY,UAAA,CAAA,SAAZ,EAAY,oBAAZ,EAA8B;SAA9B,YAAA;AACE;AACA;AACQ,UAAA,EAAA,GAAA,KAAA,KAAA,CAAA,kBAAA;AAAA,UAAA,kBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,UAAA,GAAA,EAAA;AACR,aAAO,kBAAP;AACD,KAL6B;oBAAA;;AAAA,GAA9B;;AAOQ,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,KAApB,EAA6C;AACrC,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,GAAA,GAAA,EAAA,CAAA,GAAF;AAAA,QAAO,GAAA,GAAA,EAAA,CAAA,GAAP;AACN,WAAO,GAAG,KAAK,GAAR,GAAc,CAAd,GAAmB,CAAC,KAAM,GAAG,GAAV,KAAmB,GAAI,GAAG,GAA1B,CAAD,GAAoC,GAA7D;AACD,GAHO;;AAKA,EAAA,UAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,KAAvB,EAAoC;AAC1B,QAAA,WAAA,GAAA,KAAA,KAAA,CAAA,WAAA;AACR,WAAO,WAAW,GAAG,WAAW,CAAC,KAAD,CAAd,GAAwB,KAA1C;AACD,GAHO;;AAaA,EAAA,UAAA,CAAA,SAAA,CAAA,2BAAA,GAAR,UAAoC,QAApC,EAAmE,kBAAnE,EAA6F;;;AAC3F,QAAM,SAAS,GAAW,QAAQ,GAAG,QAAH,GAAc,MAAM,CAAC,KAAK,KAAL,CAAW,KAAZ,CAAN,GAA2B,OAA3B,GAAqC,MAArF;AACA,WAAA,EAAA,GAAA,EAAA,EACE,EAAA,CAAC,SAAD,CAAA,GAAa,kBAAkB,GAAG,GADpC,EAEE,EAFF;AAGD,GALO;;AA4FA,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,KAArB,EAAqD,QAArD,EAAkF;AAChF,QAAI,eAAJ;;AACA,YAAQ,KAAK,CAAC,IAAd;AACE,WAAK,WAAL;AACA,WAAK,WAAL;AACE,QAAA,eAAe,GAAG,CAAC,QAAD,GAAa,KAAoB,CAAC,OAAlC,GAA6C,KAAoB,CAAC,OAApF;AACA;;AACF,WAAK,YAAL;AACA,WAAK,WAAL;AACE,QAAA,eAAe,GAAG,CAAC,QAAD,GACb,KAAoB,CAAC,OAArB,CAA6B,CAA7B,EAAgC,OADnB,GAEb,KAAoB,CAAC,OAArB,CAA6B,CAA7B,EAAgC,OAFrC;AAGA;AAVJ;;AAYA,WAAO,eAAP;AACD,GAfO;;AAiBA,EAAA,UAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,YAAvB,EAA6C,aAA7C,EAAkE;;;AAAlE,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,qBAAqB,GAAG,KAAK,sBAAnC;AACA,QAAM,YAAY,GAAG,YAAY,MAAM,qBAAqB,GAAG,KAAK,KAAL,CAAW,UAAd,GAA2B,KAAK,KAAL,CAAW,KAAjE,CAAjC;AACA,SAAK,QAAL,EAAa,EAAA,GAAA,EAAA,EAET,EAAA,CAAC,qBAAqB,GAAG,YAAH,GAAkB,OAAxC,CAAA,GAAkD,YAFzC,EAGT,EAAA,CAAC,qBAAqB,GAAG,oBAAH,GAA0B,eAAhD,CAAA,GAAkE,aAHzD,E,EAAb,GAKE,YAAA;AACQ,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,UAAA,GAAA,EAAA,CAAA,UAAF;AAAA,UAAc,KAAA,GAAA,EAAA,CAAA,KAAd;;AACN,UAAI,YAAY,IAAI,KAAI,CAAC,KAAL,CAAW,QAA/B,EAAyC;AACvC,QAAA,KAAI,CAAC,KAAL,CAAW,QAAX,CACE,qBAAqB,GAAG,UAAH,GAAiB,KADxC,EAEE,KAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,CAAC,UAAD,EAAc,KAAd,CAApB,GAA4C,SAF9C;AAID;AACF,KAbH;AAeD,GAlBO;;AAoBA,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,KAArB,EAAoC,aAApC,EAAyD;AACjD,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,IAAA,GAAA,EAAA,CAAA,IAAF;AAAA,QAAQ,UAAA,GAAA,EAAA,CAAA,UAAR;AAAA,QAAoB,MAAA,GAAA,EAAA,CAAA,MAApB;AAAA,QAA4B,cAAA,GAAA,EAAA,CAAA,cAA5B;AACN,QAAI,MAAM,GAAG,CAAb;;AACA,QAAI,QAAQ,CAAC,IAAD,CAAZ,EAAqB;AACnB,aAAO,IAAI,CAAC,KAAL,CAAW,IAAK,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,MAAb,CAAnB,IAA2C,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,MAAb,CAA3C,KAAoE,IAA3E,EAAkF;AAChF,QAAA,MAAM;AACP;AACF,KAPsD,CASvD;;;AACA,QAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,OAAN,CAAc,MAAd,CAAD,CAA/B;;AAEA,QAAI,UAAJ,EAAgB;AACd,MAAA,aAAa,GAAG,YAAhB;AACD;;AAED,QAAM,sBAAsB,GAC1B,KAAK,sBAAL,KAAgC,cAAc,GAAG,YAAY,IAAI,CAAnB,GAAuB,YAAY,IAAI,KAAK,aAA1F,CADF;AAEA,QAAM,sBAAsB,GAC1B,CAAC,KAAK,sBAAN,KAAiC,cAAc,GAAG,YAAY,IAAI,CAAnB,GAAuB,YAAY,IAAI,KAAK,kBAA3F,CADF;;AAGA,QAAI,CAAC,MAAD,IAAW,sBAAX,IAAqC,sBAAzC,EAAiE;AAC/D,WAAK,cAAL,CAAoB,YAApB,EAAkC,aAAlC;AACD;AACF,GAxBO;;AA7ZM,EAAA,UAAA,CAAA,YAAA,GAA6B;AACzC,IAAA,IAAI,EAAE,CADmC;AAEzC,IAAA,GAAG,EAAE,CAFoC;AAGzC,IAAA,GAAG,EAAE,EAHoC;AAIzC,IAAA,SAAS,EAAE,IAJ8B;AAKzC,IAAA,QAAQ,EAAE,KAL+B;AAMzC,IAAA,QAAQ,EAAE,KAN+B;AAOzC,IAAA,WAAW,EAAE,EAP4B;AAQzC,IAAA,cAAc,EAAE;AARyB,GAA7B;AAghBhB,SAAA,UAAA;AAAC,CAjhBD,CAAgC,KAAK,CAAC,SAAtC,CAAA;;SAAa,U","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  warnMutuallyExclusive,\n  initializeComponentRef,\n  Async,\n  on,\n  FocusRects,\n} from '../../Utilities';\nimport { ISliderProps, ISlider, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport { classNamesFunction, getNativeProps, divProperties } from '../../Utilities';\nimport { Label } from '../../Label';\n\nexport interface ISliderState {\n  value?: number;\n  lowerValue?: number;\n  renderedValue?: number;\n  renderedLowerValue?: number;\n}\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\nconst COMPONENT_NAME = 'SliderBase';\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\nexport class SliderBase extends React.Component<ISliderProps, ISliderState> implements ISlider {\n  public static defaultProps: ISliderProps = {\n    step: 1,\n    min: 0,\n    max: 10,\n    showValue: true,\n    disabled: false,\n    vertical: false,\n    buttonProps: {},\n    originFromZero: false,\n  };\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n  private _sliderLine = React.createRef<HTMLDivElement>();\n  private _thumb = React.createRef<HTMLSpanElement>();\n  private _lowerValueThumb = React.createRef<HTMLSpanElement>();\n  private _id: string;\n  private _onKeyDownTimer = -1;\n  private _isAdjustingLowerValue = false;\n\n  constructor(props: ISliderProps) {\n    super(props);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    warnMutuallyExclusive(COMPONENT_NAME, this.props, {\n      value: 'defaultValue',\n    });\n\n    if (props.ranged) {\n      warnMutuallyExclusive(COMPONENT_NAME, this.props, {\n        lowerValue: 'defaultLowerValue',\n      });\n    }\n\n    this._id = getId('Slider');\n\n    const value =\n      props.value !== undefined ? props.value : props.defaultValue !== undefined ? props.defaultValue : props.min;\n\n    const lowerValue =\n      props.lowerValue !== undefined\n        ? props.lowerValue\n        : props.defaultLowerValue !== undefined\n        ? props.defaultLowerValue\n        : props.min;\n\n    this.state = {\n      value: value,\n      lowerValue: lowerValue,\n      renderedValue: undefined,\n      renderedLowerValue: undefined,\n    };\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposeListeners();\n  }\n\n  public render(): React.ReactElement<{}> {\n    const {\n      ariaLabel,\n      className,\n      disabled,\n      label,\n      max,\n      min,\n      showValue,\n      buttonProps,\n      vertical,\n      styles,\n      theme,\n      originFromZero,\n      ranged,\n    } = this.props;\n    const value = this.value;\n    const renderedValue = this.renderedValue;\n    const renderedLowerValue = this.renderedLowerValue;\n    const thumbOffsetPercent: number = this._getPercent(renderedValue);\n    const lowerThumbOffsetPercent: number = this._getPercent(renderedLowerValue);\n    const originValue = originFromZero ? 0 : min;\n\n    const originPercent = this._getPercent(originValue);\n    const activeSectionWidth = ranged\n      ? thumbOffsetPercent - lowerThumbOffsetPercent\n      : Math.abs(originPercent - thumbOffsetPercent);\n    const topSectionWidth = Math.min(100 - thumbOffsetPercent, 100 - originPercent);\n    const bottomSectionWidth = ranged ? lowerThumbOffsetPercent : Math.min(thumbOffsetPercent, originPercent);\n\n    const lengthString = vertical ? 'height' : 'width';\n    const onMouseDownProp: {} = disabled ? {} : { onMouseDown: this._onMouseDownOrTouchStart };\n    const onTouchStartProp: {} = disabled ? {} : { onTouchStart: this._onMouseDownOrTouchStart };\n    const onKeyDownProp: {} = disabled ? {} : { onKeyDown: this._onKeyDown };\n    const onFocusProp: {} = disabled ? {} : { onFocus: this._onThumbFocus };\n\n    const classNames = getClassNames(styles, {\n      className,\n      ranged,\n      disabled,\n      vertical,\n      showTransitions: renderedValue === value || (ranged && renderedLowerValue === this.lowerValue),\n      showValue,\n      theme: theme!,\n    });\n    const divButtonProps = buttonProps\n      ? getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties)\n      : undefined;\n\n    const sliderProps = {\n      'aria-disabled': disabled,\n      role: 'slider',\n      tabIndex: disabled ? undefined : 0,\n      'data-is-focusable': !disabled,\n    };\n\n    const sliderBoxProps = {\n      id: this._id,\n      className: css(classNames.slideBox, buttonProps!.className),\n      ...onMouseDownProp,\n      ...onTouchStartProp,\n      ...onKeyDownProp,\n      ...divButtonProps,\n      ...(!ranged && {\n        ...sliderProps,\n        'aria-valuemin': min,\n        'aria-valuemax': max,\n        'aria-valuenow': value,\n        'aria-valuetext': this._getAriaValueText(value),\n        'aria-label': ariaLabel || label,\n      }),\n    };\n\n    const thumbProps = ranged\n      ? {\n          ...sliderProps,\n          ...onFocusProp,\n          id: `max-${this._id}`,\n          'aria-valuemin': this.lowerValue,\n          'aria-valuemax': max,\n          'aria-valuenow': value,\n          'aria-valuetext': this._getAriaValueText(value),\n          'aria-label': `max ${ariaLabel || label}`,\n        }\n      : undefined;\n\n    const lowerValueThumbProps = ranged\n      ? {\n          ...sliderProps,\n          ...onFocusProp,\n          id: `min-${this._id}`,\n          'aria-valuemin': min,\n          'aria-valuemax': value,\n          'aria-valuenow': this.lowerValue,\n          'aria-valuetext': this._getAriaValueText(this.lowerValue),\n          'aria-label': `min ${ariaLabel || label}`,\n        }\n      : undefined;\n\n    return (\n      <div className={classNames.root}>\n        {label && (\n          <Label className={classNames.titleLabel} {...(ariaLabel ? {} : { htmlFor: this._id })} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.container}>\n          {ranged && showValue && (\n            <Label className={classNames.valueLabel} disabled={disabled}>\n              {this._getValueLabel(vertical ? this.value! : this.lowerValue!)}\n            </Label>\n          )}\n          <div {...sliderBoxProps}>\n            <div ref={this._sliderLine} className={classNames.line}>\n              {originFromZero && (\n                <span\n                  className={css(classNames.zeroTick)}\n                  style={this._getStyleUsingOffsetPercent(vertical, originPercent)}\n                />\n              )}\n              {ranged && (\n                <span\n                  ref={this._lowerValueThumb}\n                  className={classNames.thumb}\n                  style={this._getStyleUsingOffsetPercent(vertical, lowerThumbOffsetPercent)}\n                  {...lowerValueThumbProps}\n                />\n              )}\n              <span\n                ref={this._thumb}\n                className={classNames.thumb}\n                style={this._getStyleUsingOffsetPercent(vertical, thumbOffsetPercent)}\n                {...thumbProps}\n              />\n              {(ranged || originFromZero) && (\n                <span\n                  className={css(classNames.lineContainer, classNames.inactiveSection)}\n                  style={{ [lengthString]: bottomSectionWidth + '%' }}\n                />\n              )}\n              <span\n                className={css(classNames.lineContainer, classNames.activeSection)}\n                style={{ [lengthString]: activeSectionWidth + '%' }}\n              />\n              <span\n                className={css(classNames.lineContainer, classNames.inactiveSection)}\n                style={{ [lengthString]: topSectionWidth + '%' }}\n              />\n            </div>\n          </div>\n          {showValue && (\n            <Label className={classNames.valueLabel} disabled={disabled}>\n              {this._getValueLabel(ranged && vertical ? this.lowerValue! : this.value!)}\n            </Label>\n          )}\n        </div>\n        <FocusRects />\n      </div>\n    ) as React.ReactElement<{}>;\n  }\n\n  public focus(): void {\n    if (this._thumb.current) {\n      this._thumb.current.focus();\n    }\n  }\n\n  public get range(): [number, number] | undefined {\n    if (this.props.ranged) {\n      return [this.lowerValue!, this.value!];\n    }\n  }\n\n  public get value(): number | undefined {\n    const { value = this.state.value } = this.props;\n    if (this.props.min === undefined || this.props.max === undefined || value === undefined) {\n      return undefined;\n    } else {\n      return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n  }\n\n  private get renderedValue(): number | undefined {\n    // renderedValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n    // Fall back to `value`.\n    const { renderedValue = this.value } = this.state;\n    return renderedValue;\n  }\n\n  public get lowerValue(): number | undefined {\n    const { lowerValue = this.state.lowerValue, ranged } = this.props;\n    if (!ranged || this.props.min === undefined || this.props.max === undefined || lowerValue === undefined) {\n      return undefined;\n    } else {\n      return Math.max(this.props.min, Math.min(this.props.max, lowerValue));\n    }\n  }\n\n  private get renderedLowerValue(): number | undefined {\n    // renderedLowerValue is expected to be defined while user is interacting with control, otherwise `undefined`.\n    // Fall back to `lowerValue`.\n    const { renderedLowerValue = this.lowerValue } = this.state;\n    return renderedLowerValue;\n  }\n\n  private _getPercent(value: number | undefined) {\n    const { min, max } = this.props;\n    return max === min ? 0 : ((value! - min!) / (max! - min!)) * 100;\n  }\n\n  private _getValueLabel(value: number) {\n    const { valueFormat } = this.props;\n    return valueFormat ? valueFormat(value) : value;\n  }\n\n  private _getAriaValueText = (value: number | undefined): string | undefined => {\n    const { ariaValueText } = this.props;\n    if (value !== undefined) {\n      return ariaValueText ? ariaValueText(value) : value.toString();\n    }\n    return undefined;\n  };\n\n  private _getStyleUsingOffsetPercent(vertical: boolean | undefined, thumbOffsetPercent: number): any {\n    const direction: string = vertical ? 'bottom' : getRTL(this.props.theme) ? 'right' : 'left';\n    return {\n      [direction]: thumbOffsetPercent + '%',\n    };\n  }\n\n  private _calculateCurrentSteps = (event: MouseEvent | TouchEvent): number | undefined => {\n    if (!this._sliderLine.current) {\n      return;\n    }\n\n    const { max, min, step } = this.props;\n    const steps: number = (max! - min!) / step!;\n    const sliderPositionRect: ClientRect = this._sliderLine.current.getBoundingClientRect();\n    const sliderLength: number = !this.props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number | undefined;\n    let distance: number | undefined;\n\n    if (!this.props.vertical) {\n      const left: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = getRTL(this.props.theme) ? sliderPositionRect.right - left! : left! - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom: number | undefined = this._getPosition(event, this.props.vertical);\n      distance = sliderPositionRect.bottom - bottom!;\n      currentSteps = distance / stepLength;\n    }\n\n    return currentSteps;\n  };\n\n  private _onMouseDownOrTouchStart = (event: MouseEvent | TouchEvent): void => {\n    const { ranged, min, step } = this.props;\n    if (ranged) {\n      const currentSteps = this._calculateCurrentSteps(event);\n      const newRenderedValue = min! + step! * currentSteps!;\n\n      if (\n        newRenderedValue <= (this.state.lowerValue as number) ||\n        newRenderedValue - (this.state.lowerValue as number) <= (this.state.value as number) - newRenderedValue\n      ) {\n        this._isAdjustingLowerValue = true;\n      } else {\n        this._isAdjustingLowerValue = false;\n      }\n    }\n    if (event.type === 'mousedown') {\n      this._disposables.push(\n        on(window, 'mousemove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'mouseup', this._onMouseUpOrTouchEnd, true),\n      );\n    } else if (event.type === 'touchstart') {\n      this._disposables.push(\n        on(window, 'touchmove', this._onMouseMoveOrTouchMove, true),\n        on(window, 'touchend', this._onMouseUpOrTouchEnd, true),\n      );\n    }\n    this._onMouseMoveOrTouchMove(event, true);\n  };\n\n  private _onMouseMoveOrTouchMove = (event: MouseEvent | TouchEvent, suppressEventCancelation?: boolean): void => {\n    if (!this._sliderLine.current) {\n      return;\n    }\n\n    const { max, min, step } = this.props;\n    const steps: number = (max! - min!) / step!;\n    const currentSteps = this._calculateCurrentSteps(event);\n\n    let currentValue: number | undefined;\n    let renderedValue: number | undefined;\n\n    // The value shouldn't be bigger than max or be smaller than min.\n    if (currentSteps! > Math.floor(steps)) {\n      renderedValue = currentValue = max as number;\n    } else if (currentSteps! < 0) {\n      renderedValue = currentValue = min as number;\n    } else {\n      renderedValue = min! + step! * currentSteps!;\n      currentValue = min! + step! * Math.round(currentSteps!);\n    }\n\n    this._updateValue(currentValue, renderedValue);\n\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  private _getPosition(event: MouseEvent | TouchEvent, vertical: boolean | undefined): number | undefined {\n    let currentPosition: number | undefined;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !vertical ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !vertical\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  }\n\n  private _setValueState(roundedValue: number, renderedValue: number) {\n    const isAdjustingLowerValue = this._isAdjustingLowerValue;\n    const valueChanged = roundedValue !== (isAdjustingLowerValue ? this.state.lowerValue : this.state.value);\n    this.setState(\n      {\n        [isAdjustingLowerValue ? 'lowerValue' : 'value']: roundedValue,\n        [isAdjustingLowerValue ? 'renderedLowerValue' : 'renderedValue']: renderedValue,\n      },\n      () => {\n        const { lowerValue, value } = this.state;\n        if (valueChanged && this.props.onChange) {\n          this.props.onChange(\n            isAdjustingLowerValue ? lowerValue! : value!,\n            this.props.ranged ? [lowerValue!, value!] : undefined,\n          );\n        }\n      },\n    );\n  }\n\n  private _updateValue(value: number, renderedValue: number): void {\n    const { step, snapToStep, ranged, originFromZero } = this.props;\n    let numDec = 0;\n    if (isFinite(step!)) {\n      while (Math.round(step! * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step!) {\n        numDec++;\n      }\n    }\n\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(value.toFixed(numDec));\n\n    if (snapToStep) {\n      renderedValue = roundedValue;\n    }\n\n    const shouldAdjustLowerThumb =\n      this._isAdjustingLowerValue && (originFromZero ? roundedValue <= 0 : roundedValue <= this.renderedValue!);\n    const shouldAdjustUpperThumb =\n      !this._isAdjustingLowerValue && (originFromZero ? roundedValue >= 0 : roundedValue >= this.renderedLowerValue!);\n\n    if (!ranged || shouldAdjustLowerThumb || shouldAdjustUpperThumb) {\n      this._setValueState(roundedValue, renderedValue);\n    }\n  }\n\n  private _onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    // Disable renderedValue override.\n    this.setState({\n      renderedValue: undefined,\n      renderedLowerValue: undefined,\n    });\n\n    if (this.props.onChanged) {\n      this.props.onChanged(event, this.state.value as number);\n    }\n\n    this._disposeListeners();\n  };\n\n  private _disposeListeners = (): void => {\n    this._disposables.forEach(dispose => dispose());\n    this._disposables = [];\n  };\n\n  private _onKeyDown = (event: KeyboardEvent): void => {\n    let value: number | undefined;\n    if (this._isAdjustingLowerValue) {\n      value = this.props.lowerValue || this.state.lowerValue;\n    } else {\n      value = this.props.value || this.state.value;\n    }\n    const { max, min, step } = this.props;\n\n    let diff: number | undefined = 0;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, this.props.theme):\n      case KeyCodes.down:\n        diff = -(step as number);\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, this.props.theme):\n      case KeyCodes.up:\n        diff = step;\n\n        this._clearOnKeyDownTimer();\n        this._setOnKeyDownTimer(event);\n\n        break;\n\n      case KeyCodes.home:\n        value = min;\n        break;\n\n      case KeyCodes.end:\n        value = max;\n        break;\n\n      default:\n        return;\n    }\n\n    const newValue: number = Math.min(max as number, Math.max(min as number, value! + diff!));\n    this._updateValue(newValue, newValue);\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Disable renderedValue override.\n    this.setState({\n      renderedValue: undefined,\n      renderedLowerValue: undefined,\n    });\n  };\n\n  private _onThumbFocus = (event: MouseEvent | TouchEvent): void => {\n    this._isAdjustingLowerValue = event.target === this._lowerValueThumb.current;\n  };\n\n  private _clearOnKeyDownTimer = (): void => {\n    this._async.clearTimeout(this._onKeyDownTimer);\n  };\n\n  private _setOnKeyDownTimer = (event: KeyboardEvent): void => {\n    this._onKeyDownTimer = this._async.setTimeout(() => {\n      if (this.props.onChanged) {\n        this.props.onChanged(event, this.state.value as number);\n      }\n    }, ONKEYDOWN_TIMEOUT_DURATION);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}