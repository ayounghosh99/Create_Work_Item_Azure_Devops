{"ast":null,"code":"import { __extends } from \"tslib\";\nimport \"../../CommonImports\";\nimport \"../../Core/core.css\";\nimport \"./Portal.css\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ObservableValue } from '../../Core/Observable';\nimport { Observer } from '../../Observer';\n/**\r\n * The Portal component is used to create a React Portal through a well known component.\r\n * This component allows the platform to control where portals are rooted in the document\r\n * and ensure these are managed properly.\r\n */\n\nvar Portal =\n/** @class */\nfunction (_super) {\n  __extends(Portal, _super);\n\n  function Portal(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.mounted = new ObservableValue(false); // Determine the element that will host the portal.\n\n    var parentElement = _this.props.portalElement;\n\n    if (!parentElement && _this.props.portalSelector) {\n      parentElement = document.querySelector(_this.props.portalSelector);\n    }\n\n    if (!parentElement) {\n      parentElement = document.querySelector(\".bolt-portal-host\");\n\n      if (!parentElement) {\n        parentElement = document.createElement(\"div\");\n        parentElement.className = \"bolt-portal-host absolute-fill no-events scroll-hidden\";\n        document.body.appendChild(parentElement);\n      }\n    }\n\n    if (_this.props.parentClassName && !parentElement.classList.contains(_this.props.parentClassName)) {\n      parentElement.classList.add(_this.props.parentClassName);\n    }\n\n    _this.parentElement = parentElement; // Create the hosting element for the portal.\n\n    _this.hostElement = document.createElement(\"div\");\n    return _this;\n  }\n\n  Portal.prototype.render = function () {\n    var _this = this;\n\n    this.hostElement.className = \"\";\n    this.hostElement.classList.add(\"bolt-portal\");\n    this.hostElement.classList.add(\"absolute-fill\"); // If custom class's are supplied add them (1 at a time since IE doesnt support multiple args).\n\n    if (this.props.className) {\n      var classNames = this.props.className.split(\" \");\n\n      for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\n        var className = classNames_1[_i];\n        this.hostElement.classList.add(className);\n      }\n    } // NOTE: We dont render the children until after we have mounted the portal.\n    //  If the caller needs to access the document while mounting the content this\n    //  will ensure the children of the portal are not mounted until the portal\n    //  is attached to the DOM.\n\n\n    return ReactDOM.createPortal(React.createElement(Observer, {\n      mounted: this.mounted\n    }, function (props) {\n      return props.mounted ? _this.props.children : null;\n    }), this.hostElement);\n  };\n\n  Portal.prototype.componentDidMount = function () {\n    this.parentElement.appendChild(this.hostElement);\n    this.mounted.value = true;\n  };\n\n  Portal.prototype.componentWillUnmount = function () {\n    this.parentElement.removeChild(this.hostElement);\n  };\n\n  return Portal;\n}(React.Component);\n\nexport { Portal };","map":{"version":3,"sources":["/Users/ayounghosh/Downloads/Create_Work_Item_Azure_Devops/Front_End/node_modules/azure-devops-ui/Components/Portal/Portal.js"],"names":["__extends","React","ReactDOM","ObservableValue","Observer","Portal","_super","props","_this","call","mounted","parentElement","portalElement","portalSelector","document","querySelector","createElement","className","body","appendChild","parentClassName","classList","contains","add","hostElement","prototype","render","classNames","split","_i","classNames_1","length","createPortal","children","componentDidMount","value","componentWillUnmount","removeChild","Component"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\r\nimport \"../../CommonImports\";\r\nimport \"../../Core/core.css\";\r\nimport \"./Portal.css\";\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { ObservableValue } from '../../Core/Observable';\r\nimport { Observer } from '../../Observer';\r\n/**\r\n * The Portal component is used to create a React Portal through a well known component.\r\n * This component allows the platform to control where portals are rooted in the document\r\n * and ensure these are managed properly.\r\n */\r\nvar Portal = /** @class */ (function (_super) {\r\n    __extends(Portal, _super);\r\n    function Portal(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.mounted = new ObservableValue(false);\r\n        // Determine the element that will host the portal.\r\n        var parentElement = _this.props.portalElement;\r\n        if (!parentElement && _this.props.portalSelector) {\r\n            parentElement = document.querySelector(_this.props.portalSelector);\r\n        }\r\n        if (!parentElement) {\r\n            parentElement = document.querySelector(\".bolt-portal-host\");\r\n            if (!parentElement) {\r\n                parentElement = document.createElement(\"div\");\r\n                parentElement.className = \"bolt-portal-host absolute-fill no-events scroll-hidden\";\r\n                document.body.appendChild(parentElement);\r\n            }\r\n        }\r\n        if (_this.props.parentClassName && !parentElement.classList.contains(_this.props.parentClassName)) {\r\n            parentElement.classList.add(_this.props.parentClassName);\r\n        }\r\n        _this.parentElement = parentElement;\r\n        // Create the hosting element for the portal.\r\n        _this.hostElement = document.createElement(\"div\");\r\n        return _this;\r\n    }\r\n    Portal.prototype.render = function () {\r\n        var _this = this;\r\n        this.hostElement.className = \"\";\r\n        this.hostElement.classList.add(\"bolt-portal\");\r\n        this.hostElement.classList.add(\"absolute-fill\");\r\n        // If custom class's are supplied add them (1 at a time since IE doesnt support multiple args).\r\n        if (this.props.className) {\r\n            var classNames = this.props.className.split(\" \");\r\n            for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\r\n                var className = classNames_1[_i];\r\n                this.hostElement.classList.add(className);\r\n            }\r\n        }\r\n        // NOTE: We dont render the children until after we have mounted the portal.\r\n        //  If the caller needs to access the document while mounting the content this\r\n        //  will ensure the children of the portal are not mounted until the portal\r\n        //  is attached to the DOM.\r\n        return ReactDOM.createPortal(React.createElement(Observer, { mounted: this.mounted }, function (props) { return (props.mounted ? _this.props.children : null); }), this.hostElement);\r\n    };\r\n    Portal.prototype.componentDidMount = function () {\r\n        this.parentElement.appendChild(this.hostElement);\r\n        this.mounted.value = true;\r\n    };\r\n    Portal.prototype.componentWillUnmount = function () {\r\n        this.parentElement.removeChild(this.hostElement);\r\n    };\r\n    return Portal;\r\n}(React.Component));\r\nexport { Portal };\r\n"]},"metadata":{},"sourceType":"module"}