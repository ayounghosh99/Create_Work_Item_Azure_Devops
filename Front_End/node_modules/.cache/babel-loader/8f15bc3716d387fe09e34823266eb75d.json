{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport \"../../CommonImports\";\nimport \"../../Core/core.css\";\nimport \"./Callout.css\";\nimport * as React from \"react\";\nimport { FocusWithin } from '../../FocusWithin';\nimport { FocusZone } from '../../FocusZone';\nimport { Portal } from '../../Portal';\nimport { css, getSafeId, KeyCode } from '../../Util';\nimport { Location, position, updateLayout } from '../../Utilities/Position';\nimport { TimerManagement } from '../../Core/TimerManagement';\nimport { SurfaceBackground, SurfaceContext } from '../../Surface';\nimport { ContentJustification, ContentLocation, ContentOrientation, ContentSize } from \"./Callout.Props\";\n\nvar Callout =\n/** @class */\nfunction (_super) {\n  __extends(Callout, _super);\n\n  function Callout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.calloutContent = React.createRef();\n    return _this;\n  }\n\n  Callout.prototype.render = function () {\n    var portalProps = this.props.portalProps;\n    return React.createElement(Portal, __assign({}, portalProps, {\n      className: css(portalProps && portalProps.className, this.props.anchorElement && \"bolt-layout-relative\")\n    }), React.createElement(CalloutContent, __assign({\n      ref: this.calloutContent\n    }, this.props)));\n  };\n\n  Callout.prototype.componentWillUnmount = function () {\n    // We need to let the content handle the WillUnmount before the Portal, this\n    // will ensure the the callout can deal with unmounting content that still has\n    // focus. Otherwise the root will be detached from the document and focus will\n    // have moved to the body.\n    if (this.calloutContent.current) {\n      this.calloutContent.current.portalWillUnmount();\n    }\n  };\n\n  Callout.prototype.updateLayout = function () {\n    if (this.calloutContent.current) {\n      this.calloutContent.current.updateLayout();\n    }\n  };\n\n  Callout.defaultProps = {\n    blurDismiss: false,\n    viewportChangeDismiss: true\n  };\n  return Callout;\n}(React.Component);\n\nexport { Callout };\n\nvar CalloutContent =\n/** @class */\nfunction (_super) {\n  __extends(CalloutContent, _super);\n\n  function CalloutContent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.calloutElement = React.createRef();\n    _this.relayoutTimer = new TimerManagement();\n    _this.scrollListen = false;\n    _this.scrollEvent = null;\n    _this.initialScreenWidth = window.innerWidth;\n\n    _this.onBlur = function () {\n      _this.props.onDismiss && _this.props.onDismiss();\n    };\n\n    _this.onClick = function (event) {\n      // If we click on the light dismiss div we will dismiss it.\n      if (_this.props.lightDismiss && !event.defaultPrevented) {\n        if (_this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      // If we press escape from within the callout this will dismiss it.\n      if (_this.props.escDismiss && event.which === KeyCode.escape && !event.defaultPrevented) {\n        if (_this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    _this.onResize = function () {\n      // Fix for issue where the soft keyboard on android closes callouts.\n      if (_this.props.viewportChangeDismiss === true && (_this.initialScreenWidth !== window.innerWidth || !document.activeElement || document.activeElement.tagName !== \"INPUT\" && document.activeElement.tagName !== \"TEXTAREA\")) {\n        _this.props.onDismiss && _this.props.onDismiss();\n      } else if (_this.props.updateLayout) {\n        _this.relayoutTimer.clearAllTimers();\n\n        _this.relayoutTimer.setTimeout(function () {\n          _this.updateLayout();\n        }, 200);\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (_this.scrollListen) {\n        _this.scrollEvent = event.nativeEvent;\n      }\n    };\n\n    _this.onScrollDocument = function (event) {\n      if (_this.scrollListen) {\n        if (event === _this.scrollEvent) {\n          _this.scrollEvent = null;\n        } else {\n          if (_this.props.viewportChangeDismiss === true) {\n            var anchorElement = _this.props.anchorElement; // If the element containing the anchor is scrolled dismiss the callout.\n\n            if (event.target && anchorElement && event.target.contains(anchorElement)) {\n              _this.props.onDismiss && _this.props.onDismiss();\n            }\n          } else if (_this.props.updateLayout) {\n            _this.relayoutTimer.setTimeout(function () {\n              _this.updateLayout();\n            }, 50);\n          }\n        }\n      }\n    }; // Track the element that had focus when we mounted.\n\n\n    _this.focusElement = document.activeElement;\n    _this.contentElement = props.contentRef || React.createRef();\n    return _this;\n  }\n\n  CalloutContent.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        blurDismiss = _a.blurDismiss,\n        contentJustification = _a.contentJustification,\n        contentLocation = _a.contentLocation,\n        contentOrientation = _a.contentOrientation,\n        focuszoneProps = _a.focuszoneProps,\n        lightDismiss = _a.lightDismiss,\n        modal = _a.modal,\n        onAnimationEnd = _a.onAnimationEnd,\n        onMouseEnter = _a.onMouseEnter,\n        onMouseLeave = _a.onMouseLeave,\n        anchorElement = _a.anchorElement;\n    var content; // If we have both a FocusWithin and a FocusZone we need to use the functional version\n    // of the FocusWithin to allow the FocusZone to contain the content directly.\n\n    if (blurDismiss && focuszoneProps) {\n      content = React.createElement(FocusWithin, {\n        onBlur: this.onBlur,\n        updateStateOnFocusChange: false\n      }, function (props) {\n        return React.createElement(FocusZone, __assign({}, focuszoneProps), _this.renderContent(props.onFocus, props.onBlur));\n      });\n    } else {\n      content = this.renderContent(); // Add the focus tracker to dismiss the callout if we are dismissing on blur.\n\n      if (blurDismiss) {\n        content = React.createElement(FocusWithin, {\n          onBlur: this.onBlur,\n          updateStateOnFocusChange: false\n        }, content);\n      } // Add focus zone if focuszoneProperties are specified\n\n\n      if (focuszoneProps) {\n        content = React.createElement(FocusZone, __assign({}, focuszoneProps), content);\n      }\n    }\n\n    var lightDismissDiv = lightDismiss ? React.createElement(\"div\", {\n      className: css(\"absolute-fill bolt-light-dismiss\", modal && \"bolt-callout-modal\"),\n      onClick: this.onClick\n    }) : null; // The callout is wrapped in a floating element in the portal.\n    // If lightDismiss is enabled we will create an absolute-fill div to capture onClick events.\n\n    return React.createElement(SurfaceContext.Provider, {\n      value: {\n        background: SurfaceBackground.callout\n      }\n    }, React.createElement(\"div\", {\n      className: \"flex-row flex-grow\"\n    }, React.createElement(\"div\", {\n      className: css(this.props.className, \"bolt-callout absolute\", contentLocation !== undefined && \"absolute-fill\", contentJustification === ContentJustification.Start && \"justify-start\", contentJustification === ContentJustification.Center && \"justify-center\", contentJustification === ContentJustification.End && \"justify-end\", contentLocation === ContentLocation.Start && \"flex-start\", contentLocation === ContentLocation.Center && \"flex-center\", contentLocation === ContentLocation.End && \"flex-end\", contentOrientation === ContentOrientation.Column && \"flex-column\", contentOrientation !== ContentOrientation.Column && \"flex-row\", modal && !lightDismiss && \"bolt-callout-modal\"),\n      id: getSafeId(this.props.id),\n      onAnimationEnd: onAnimationEnd,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onKeyDown: this.onKeyDown,\n      ref: this.calloutElement,\n      role: this.props.role\n    }, !anchorElement && lightDismissDiv, content), !!anchorElement && lightDismissDiv));\n  };\n\n  CalloutContent.prototype.componentDidMount = function () {\n    this.updateLayout(); // If this is an element relative layout we need to listen for scroll events\n    // on the document and dismiss the callout if the scroll event didnt pass\n    // through the callout.\n\n    if (this.props.anchorElement) {\n      window.addEventListener(\"resize\", this.onResize);\n      document.addEventListener(\"scroll\", this.onScrollDocument, true);\n      this.scrollListen = true;\n    }\n  };\n\n  CalloutContent.prototype.componentDidUpdate = function () {\n    if (this.props.updateLayout) {\n      this.updateLayout();\n    }\n  };\n\n  CalloutContent.prototype.componentWillUnmount = function () {\n    if (this.scrollListen) {\n      document.removeEventListener(\"scroll\", this.onScrollDocument, true);\n      window.removeEventListener(\"resize\", this.onResize);\n    }\n\n    if (this.relayoutTimer) {\n      this.relayoutTimer.clearAllTimers();\n    }\n  };\n\n  CalloutContent.prototype.portalWillUnmount = function () {\n    var contentElement = this.contentElement.current;\n    var focusElement = this.focusElement; // If the callout has focus when unmounted we need to set focus back to the last element with focus.\n    // Need to wait for next tick otherwise focus/blur events are not fired.\n\n    if (focusElement && contentElement && contentElement.contains(document.activeElement)) {\n      window.setTimeout(function () {\n        // We need to make sure the active element is portal after the timeout.\n        // It may have moved through other means before the timeout expires.\n        // Set focus to the focusElement if our element contains focus, or if the focus has gone back to the document body\n        if (contentElement.contains(document.activeElement) || document.activeElement === document.body || document.activeElement === null) {\n          focusElement.focus();\n        }\n      }, 0);\n    }\n  };\n\n  CalloutContent.prototype.updateLayout = function () {\n    if (this.props.contentLocation === undefined) {\n      if (this.calloutElement.current) {\n        // Position the element based on the initial layout parameters.\n        position(this.calloutElement.current, this.props.calloutOrigin || {\n          horizontal: Location.start,\n          vertical: Location.start\n        }, this.props.anchorOffset, this.props.anchorElement, this.props.anchorOrigin, this.props.anchorPoint, this.props.anchorElement ? 5000 : 0); // Now that the component is placed at the requested location, update\n        // the layout if the caller didnt request a fixed layout.\n\n        if (!this.props.fixedLayout) {\n          updateLayout(this.calloutElement.current, this.props.calloutOrigin || {\n            horizontal: Location.start,\n            vertical: Location.start\n          }, this.props.anchorOffset, this.props.anchorElement, this.props.anchorOrigin, this.props.anchorPoint, this.props.anchorElement ? 5000 : 0);\n        }\n      }\n    }\n  };\n\n  CalloutContent.prototype.renderContent = function (onFocus, onBlur) {\n    var _a = this.props,\n        contentJustification = _a.contentJustification,\n        contentOrientation = _a.contentOrientation,\n        contentSize = _a.contentSize,\n        height = _a.height,\n        width = _a.width;\n    return React.createElement(\"div\", {\n      \"aria-describedby\": getSafeId(this.props.ariaDescribedBy),\n      \"aria-label\": this.props.ariaLabel,\n      \"aria-labelledby\": getSafeId(this.props.ariaLabelledBy),\n      \"aria-modal\": this.props.modal,\n      className: css(this.props.contentClassName, \"bolt-callout-content\", this.props.contentShadow && \"bolt-callout-shadow\", contentJustification === ContentJustification.Stretch && \"flex-grow\", contentOrientation === ContentOrientation.Column && \"flex-column\", contentOrientation === ContentOrientation.Row && \"flex-row\", contentSize === ContentSize.Small && \"bolt-callout-small\", contentSize === ContentSize.Medium && \"bolt-callout-medium\", contentSize === ContentSize.Large && \"bolt-callout-large\", contentSize === ContentSize.ExtraLarge && \"bolt-callout-extra-large\", contentSize === ContentSize.Auto && \"bolt-callout-auto\"),\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onScroll: this.onScroll,\n      ref: this.contentElement,\n      role: this.props.role || \"dialog\",\n      style: {\n        height: height,\n        width: width\n      }\n    }, this.props.children);\n  };\n\n  return CalloutContent;\n}(React.Component);","map":{"version":3,"sources":["/Users/ayounghosh/Downloads/Create_Work_Item_Azure_Devops/Front_End/node_modules/azure-devops-ui/Components/Callout/Callout.js"],"names":["__assign","__extends","React","FocusWithin","FocusZone","Portal","css","getSafeId","KeyCode","Location","position","updateLayout","TimerManagement","SurfaceBackground","SurfaceContext","ContentJustification","ContentLocation","ContentOrientation","ContentSize","Callout","_super","_this","apply","arguments","calloutContent","createRef","prototype","render","portalProps","props","createElement","className","anchorElement","CalloutContent","ref","componentWillUnmount","current","portalWillUnmount","defaultProps","blurDismiss","viewportChangeDismiss","Component","call","calloutElement","relayoutTimer","scrollListen","scrollEvent","initialScreenWidth","window","innerWidth","onBlur","onDismiss","onClick","event","lightDismiss","defaultPrevented","preventDefault","onKeyDown","escDismiss","which","escape","onResize","document","activeElement","tagName","clearAllTimers","setTimeout","onScroll","nativeEvent","onScrollDocument","target","contains","focusElement","contentElement","contentRef","_a","contentJustification","contentLocation","contentOrientation","focuszoneProps","modal","onAnimationEnd","onMouseEnter","onMouseLeave","content","updateStateOnFocusChange","renderContent","onFocus","lightDismissDiv","Provider","value","background","callout","undefined","Start","Center","End","Column","id","role","componentDidMount","addEventListener","componentDidUpdate","removeEventListener","body","focus","calloutOrigin","horizontal","start","vertical","anchorOffset","anchorOrigin","anchorPoint","fixedLayout","contentSize","height","width","ariaDescribedBy","ariaLabel","ariaLabelledBy","contentClassName","contentShadow","Stretch","Row","Small","Medium","Large","ExtraLarge","Auto","style","children"],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport \"../../CommonImports\";\r\nimport \"../../Core/core.css\";\r\nimport \"./Callout.css\";\r\nimport * as React from \"react\";\r\nimport { FocusWithin } from '../../FocusWithin';\r\nimport { FocusZone } from '../../FocusZone';\r\nimport { Portal } from '../../Portal';\r\nimport { css, getSafeId, KeyCode } from '../../Util';\r\nimport { Location, position, updateLayout } from '../../Utilities/Position';\r\nimport { TimerManagement } from '../../Core/TimerManagement';\r\nimport { SurfaceBackground, SurfaceContext } from '../../Surface';\r\nimport { ContentJustification, ContentLocation, ContentOrientation, ContentSize } from \"./Callout.Props\";\r\nvar Callout = /** @class */ (function (_super) {\r\n    __extends(Callout, _super);\r\n    function Callout() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.calloutContent = React.createRef();\r\n        return _this;\r\n    }\r\n    Callout.prototype.render = function () {\r\n        var portalProps = this.props.portalProps;\r\n        return (React.createElement(Portal, __assign({}, portalProps, { className: css(portalProps && portalProps.className, this.props.anchorElement && \"bolt-layout-relative\") }),\r\n            React.createElement(CalloutContent, __assign({ ref: this.calloutContent }, this.props))));\r\n    };\r\n    Callout.prototype.componentWillUnmount = function () {\r\n        // We need to let the content handle the WillUnmount before the Portal, this\r\n        // will ensure the the callout can deal with unmounting content that still has\r\n        // focus. Otherwise the root will be detached from the document and focus will\r\n        // have moved to the body.\r\n        if (this.calloutContent.current) {\r\n            this.calloutContent.current.portalWillUnmount();\r\n        }\r\n    };\r\n    Callout.prototype.updateLayout = function () {\r\n        if (this.calloutContent.current) {\r\n            this.calloutContent.current.updateLayout();\r\n        }\r\n    };\r\n    Callout.defaultProps = {\r\n        blurDismiss: false,\r\n        viewportChangeDismiss: true\r\n    };\r\n    return Callout;\r\n}(React.Component));\r\nexport { Callout };\r\nvar CalloutContent = /** @class */ (function (_super) {\r\n    __extends(CalloutContent, _super);\r\n    function CalloutContent(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.calloutElement = React.createRef();\r\n        _this.relayoutTimer = new TimerManagement();\r\n        _this.scrollListen = false;\r\n        _this.scrollEvent = null;\r\n        _this.initialScreenWidth = window.innerWidth;\r\n        _this.onBlur = function () {\r\n            _this.props.onDismiss && _this.props.onDismiss();\r\n        };\r\n        _this.onClick = function (event) {\r\n            // If we click on the light dismiss div we will dismiss it.\r\n            if (_this.props.lightDismiss && !event.defaultPrevented) {\r\n                if (_this.props.onDismiss) {\r\n                    _this.props.onDismiss();\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        };\r\n        _this.onKeyDown = function (event) {\r\n            // If we press escape from within the callout this will dismiss it.\r\n            if (_this.props.escDismiss && event.which === KeyCode.escape && !event.defaultPrevented) {\r\n                if (_this.props.onDismiss) {\r\n                    _this.props.onDismiss();\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        };\r\n        _this.onResize = function () {\r\n            // Fix for issue where the soft keyboard on android closes callouts.\r\n            if (_this.props.viewportChangeDismiss === true &&\r\n                (_this.initialScreenWidth !== window.innerWidth ||\r\n                    !document.activeElement ||\r\n                    (document.activeElement.tagName !== \"INPUT\" && document.activeElement.tagName !== \"TEXTAREA\"))) {\r\n                _this.props.onDismiss && _this.props.onDismiss();\r\n            }\r\n            else if (_this.props.updateLayout) {\r\n                _this.relayoutTimer.clearAllTimers();\r\n                _this.relayoutTimer.setTimeout(function () {\r\n                    _this.updateLayout();\r\n                }, 200);\r\n            }\r\n        };\r\n        _this.onScroll = function (event) {\r\n            if (_this.scrollListen) {\r\n                _this.scrollEvent = event.nativeEvent;\r\n            }\r\n        };\r\n        _this.onScrollDocument = function (event) {\r\n            if (_this.scrollListen) {\r\n                if (event === _this.scrollEvent) {\r\n                    _this.scrollEvent = null;\r\n                }\r\n                else {\r\n                    if (_this.props.viewportChangeDismiss === true) {\r\n                        var anchorElement = _this.props.anchorElement;\r\n                        // If the element containing the anchor is scrolled dismiss the callout.\r\n                        if (event.target && anchorElement && event.target.contains(anchorElement)) {\r\n                            _this.props.onDismiss && _this.props.onDismiss();\r\n                        }\r\n                    }\r\n                    else if (_this.props.updateLayout) {\r\n                        _this.relayoutTimer.setTimeout(function () {\r\n                            _this.updateLayout();\r\n                        }, 50);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // Track the element that had focus when we mounted.\r\n        _this.focusElement = document.activeElement;\r\n        _this.contentElement = props.contentRef || React.createRef();\r\n        return _this;\r\n    }\r\n    CalloutContent.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, blurDismiss = _a.blurDismiss, contentJustification = _a.contentJustification, contentLocation = _a.contentLocation, contentOrientation = _a.contentOrientation, focuszoneProps = _a.focuszoneProps, lightDismiss = _a.lightDismiss, modal = _a.modal, onAnimationEnd = _a.onAnimationEnd, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, anchorElement = _a.anchorElement;\r\n        var content;\r\n        // If we have both a FocusWithin and a FocusZone we need to use the functional version\r\n        // of the FocusWithin to allow the FocusZone to contain the content directly.\r\n        if (blurDismiss && focuszoneProps) {\r\n            content = (React.createElement(FocusWithin, { onBlur: this.onBlur, updateStateOnFocusChange: false }, function (props) { return React.createElement(FocusZone, __assign({}, focuszoneProps), _this.renderContent(props.onFocus, props.onBlur)); }));\r\n        }\r\n        else {\r\n            content = this.renderContent();\r\n            // Add the focus tracker to dismiss the callout if we are dismissing on blur.\r\n            if (blurDismiss) {\r\n                content = (React.createElement(FocusWithin, { onBlur: this.onBlur, updateStateOnFocusChange: false }, content));\r\n            }\r\n            // Add focus zone if focuszoneProperties are specified\r\n            if (focuszoneProps) {\r\n                content = React.createElement(FocusZone, __assign({}, focuszoneProps), content);\r\n            }\r\n        }\r\n        var lightDismissDiv = lightDismiss ? (React.createElement(\"div\", { className: css(\"absolute-fill bolt-light-dismiss\", modal && \"bolt-callout-modal\"), onClick: this.onClick })) : null;\r\n        // The callout is wrapped in a floating element in the portal.\r\n        // If lightDismiss is enabled we will create an absolute-fill div to capture onClick events.\r\n        return (React.createElement(SurfaceContext.Provider, { value: { background: SurfaceBackground.callout } },\r\n            React.createElement(\"div\", { className: \"flex-row flex-grow\" },\r\n                React.createElement(\"div\", { className: css(this.props.className, \"bolt-callout absolute\", contentLocation !== undefined && \"absolute-fill\", contentJustification === ContentJustification.Start && \"justify-start\", contentJustification === ContentJustification.Center && \"justify-center\", contentJustification === ContentJustification.End && \"justify-end\", contentLocation === ContentLocation.Start && \"flex-start\", contentLocation === ContentLocation.Center && \"flex-center\", contentLocation === ContentLocation.End && \"flex-end\", contentOrientation === ContentOrientation.Column && \"flex-column\", contentOrientation !== ContentOrientation.Column && \"flex-row\", modal && !lightDismiss && \"bolt-callout-modal\"), id: getSafeId(this.props.id), onAnimationEnd: onAnimationEnd, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onKeyDown: this.onKeyDown, ref: this.calloutElement, role: this.props.role },\r\n                    !anchorElement && lightDismissDiv,\r\n                    content),\r\n                !!anchorElement && lightDismissDiv)));\r\n    };\r\n    CalloutContent.prototype.componentDidMount = function () {\r\n        this.updateLayout();\r\n        // If this is an element relative layout we need to listen for scroll events\r\n        // on the document and dismiss the callout if the scroll event didnt pass\r\n        // through the callout.\r\n        if (this.props.anchorElement) {\r\n            window.addEventListener(\"resize\", this.onResize);\r\n            document.addEventListener(\"scroll\", this.onScrollDocument, true);\r\n            this.scrollListen = true;\r\n        }\r\n    };\r\n    CalloutContent.prototype.componentDidUpdate = function () {\r\n        if (this.props.updateLayout) {\r\n            this.updateLayout();\r\n        }\r\n    };\r\n    CalloutContent.prototype.componentWillUnmount = function () {\r\n        if (this.scrollListen) {\r\n            document.removeEventListener(\"scroll\", this.onScrollDocument, true);\r\n            window.removeEventListener(\"resize\", this.onResize);\r\n        }\r\n        if (this.relayoutTimer) {\r\n            this.relayoutTimer.clearAllTimers();\r\n        }\r\n    };\r\n    CalloutContent.prototype.portalWillUnmount = function () {\r\n        var contentElement = this.contentElement.current;\r\n        var focusElement = this.focusElement;\r\n        // If the callout has focus when unmounted we need to set focus back to the last element with focus.\r\n        // Need to wait for next tick otherwise focus/blur events are not fired.\r\n        if (focusElement && contentElement && contentElement.contains(document.activeElement)) {\r\n            window.setTimeout(function () {\r\n                // We need to make sure the active element is portal after the timeout.\r\n                // It may have moved through other means before the timeout expires.\r\n                // Set focus to the focusElement if our element contains focus, or if the focus has gone back to the document body\r\n                if (contentElement.contains(document.activeElement) || document.activeElement === document.body || document.activeElement === null) {\r\n                    focusElement.focus();\r\n                }\r\n            }, 0);\r\n        }\r\n    };\r\n    CalloutContent.prototype.updateLayout = function () {\r\n        if (this.props.contentLocation === undefined) {\r\n            if (this.calloutElement.current) {\r\n                // Position the element based on the initial layout parameters.\r\n                position(this.calloutElement.current, this.props.calloutOrigin || { horizontal: Location.start, vertical: Location.start }, this.props.anchorOffset, this.props.anchorElement, this.props.anchorOrigin, this.props.anchorPoint, this.props.anchorElement ? 5000 : 0);\r\n                // Now that the component is placed at the requested location, update\r\n                // the layout if the caller didnt request a fixed layout.\r\n                if (!this.props.fixedLayout) {\r\n                    updateLayout(this.calloutElement.current, this.props.calloutOrigin || { horizontal: Location.start, vertical: Location.start }, this.props.anchorOffset, this.props.anchorElement, this.props.anchorOrigin, this.props.anchorPoint, this.props.anchorElement ? 5000 : 0);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CalloutContent.prototype.renderContent = function (onFocus, onBlur) {\r\n        var _a = this.props, contentJustification = _a.contentJustification, contentOrientation = _a.contentOrientation, contentSize = _a.contentSize, height = _a.height, width = _a.width;\r\n        return (React.createElement(\"div\", { \"aria-describedby\": getSafeId(this.props.ariaDescribedBy), \"aria-label\": this.props.ariaLabel, \"aria-labelledby\": getSafeId(this.props.ariaLabelledBy), \"aria-modal\": this.props.modal, className: css(this.props.contentClassName, \"bolt-callout-content\", this.props.contentShadow && \"bolt-callout-shadow\", contentJustification === ContentJustification.Stretch && \"flex-grow\", contentOrientation === ContentOrientation.Column && \"flex-column\", contentOrientation === ContentOrientation.Row && \"flex-row\", contentSize === ContentSize.Small && \"bolt-callout-small\", contentSize === ContentSize.Medium && \"bolt-callout-medium\", contentSize === ContentSize.Large && \"bolt-callout-large\", contentSize === ContentSize.ExtraLarge && \"bolt-callout-extra-large\", contentSize === ContentSize.Auto && \"bolt-callout-auto\"), onBlur: onBlur, onFocus: onFocus, onScroll: this.onScroll, ref: this.contentElement, role: this.props.role || \"dialog\", style: { height: height, width: width } }, this.props.children));\r\n    };\r\n    return CalloutContent;\r\n}(React.Component));\r\n"]},"metadata":{},"sourceType":"module"}