import{__awaiter,__generator}from"tslib";import*as React from"react";export var makeCancelable=function(e){var t=!1,n=new Promise(function(r,o){var u=function(){return t&&(n.catch(function(){}),o({isCanceled:!0})),t};e.then(function(e){return u()||r(e)}),e.catch(function(e){return u()||o(e)})});return{promise:n,cancel:function(){t=!0}}};export function timeout(e,t,n){return new Promise(function(r,o){var u=setTimeout(function(){o(null==n?"Timed out after "+t+" ms.":n)},t);e.then(function(e){r(e),clearTimeout(u)},function(e){o(e),clearTimeout(u)})})};export function wait(e){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return[2,new Promise(function(t){setTimeout(t,e)})]})})};export function delay(e,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(n){switch(n.label){case 0:return[4,Promise.all([e,wait(t)])];case 1:return[2,n.sent()[0]]}})})};export function allSettled(e){var t=new Array(e.length);return new Promise(function(n){for(var r=0,o=function(o){e[o].then(function(e){t[o]={state:"fulfilled",value:e}},function(e){t[o]={state:"rejected",reason:e}}).then(function(){++r===e.length&&n(t)})},u=0;u<e.length;++u)o(u)})};export function usePromise(){var e=React.useRef([]);React.useEffect(function(){return function(){e.current&&(e.current.forEach(function(e){return e.cancel()}),e.current=null)}},[]);return{trackPromise:React.useCallback(function(t){var n=makeCancelable(t);if(!e.current)throw new Error("usePromise hook: `trackPromise` called after using component was unmounted.");return e.current.push(n),n.promise},[])}};