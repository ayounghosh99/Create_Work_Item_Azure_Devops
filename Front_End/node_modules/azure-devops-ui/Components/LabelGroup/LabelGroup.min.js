import{__assign,__extends}from"tslib";import"../../CommonImports";import"../../Core/core.css";import*as React from"react";import{WrappingBehavior}from"./LabelGroup.Props";import{Label}from"../Label/Label";import{css,getSafeId}from"../../Util";import{FocusZone,FocusZoneDirection}from"../../FocusZone";import{ObservableValue,ObservableLike}from"../../Core/Observable";import{FocusWithin}from"../../FocusWithin";import{Observer}from"../../Observer";var LabelGroup=function(e){function t(t){var n=e.call(this,t)||this;return n.contentSelectionMap={},n.labelReferences=[],n.onLabelMouseDown=function(e,t,o){var a=n.props,r=a.disableMouseFocusOnLabels,l=void 0===r||r,c=a.onLabelMouseDown;c&&c(e,t,o),l&&e.preventDefault()},n.onLabelsChanged=function(e){var t=new Set(ObservableLike.getValue(n.props.selectedLabelContents));return e.removedItems&&e.removedItems.forEach(function(e){n.contentSelectionMap[e.content]=void 0}),e.addedItems&&e.addedItems.forEach(function(e){n.contentSelectionMap[e.content]=new ObservableValue(t.has(e.content))}),!0},n.onSelectedKeysChanged=function(e){return n.updateKeySelectionMap(e.addedItems,e.removedItems),!1},n.buildContentSelectionMap(ObservableLike.getValue(t.labelProps),t.selectedLabelContents?ObservableLike.getValue(t.selectedLabelContents):[]),n}return __extends(t,e),t.prototype.focusLabel=function(e){this.labelReferences[e]&&this.labelReferences[e].focus()},t.prototype.render=function(){var e=this,t=this.props,n=t.className,o=t.defaultFocusElementId,a=void 0===o?"label-0":o,r=t.enableHoverStyles,l=void 0!==r&&r,c=t.fadeOutOverflow,i=void 0!==c&&c,s=t.id,u=t.labelProps,p=t.onLabelClick,b=t.onLabelKeyDown,f=t.selectedLabelContents,d=t.title,m=t.wrappingBehavior,v=(void 0===m?WrappingBehavior.oneLine:m)==WrappingBehavior.oneLine?"one-line":"free-flow";return React.createElement("div",{className:css(n,"flex-column")},d&&React.createElement("div",{className:"bolt-labelgroup-title-wrapper body-m"},d),React.createElement(FocusZone,{allowArrowOutOfInputs:!0,direction:FocusZoneDirection.Horizontal,focusGroupProps:{defaultElementId:a}},React.createElement("div",{className:css("bolt-labelgroup flex-row",v,i&&"fade-out"),id:getSafeId(s)},React.createElement(FocusWithin,null,function(t){return React.createElement(React.Fragment,null,React.createElement(Observer,{labelProps:{observableValue:u,filter:e.onLabelsChanged},selectedLabelContents:{observableValue:f,filter:e.onSelectedKeysChanged}},function(n){return n.labelProps&&n.labelProps.map(function(n,o){return React.createElement(Label,__assign({},n,{enableHover:l,id:"label-"+o,key:n.content,onBlur:t.onBlur,onClick:function(e){return p&&p(e,n,o)},onFocus:t.onFocus,onKeyDown:function(e){return b&&b(e,n,o)},onMouseDown:function(t){return e.onLabelMouseDown(t,n,o)},ref:function(t){return e.labelReferences[o]=t},selected:e.contentSelectionMap[n.content]}))})}),e.props.children)}))))},t.prototype.buildContentSelectionMap=function(e,t){var n=this;this.contentSelectionMap={};var o=new Set(t);e.forEach(function(e){n.contentSelectionMap[e.content]=new ObservableValue(o.has(e.content))})},t.prototype.updateKeySelectionMap=function(e,t){var n=this;e&&e.forEach(function(e){n.contentSelectionMap[e]&&(n.contentSelectionMap[e].value=!0)}),t&&t.forEach(function(e){n.contentSelectionMap[e]&&(n.contentSelectionMap[e].value=!1)})},t}(React.Component);export{LabelGroup};