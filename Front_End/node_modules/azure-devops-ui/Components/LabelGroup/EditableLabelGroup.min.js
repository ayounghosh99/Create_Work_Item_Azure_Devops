import{__assign,__extends,__spreadArrays}from"tslib";import"../../CommonImports";import"../../Core/core.css";import*as React from"react";import*as Resources from"../../Resources.Label";import{WrappingBehavior}from"./LabelGroup.Props";import{LabelGroup}from"./LabelGroup";import{css,getSafeId,KeyCode}from"../../Util";import{ObservableValue,ObservableArray,ObservableLike}from"../../Core/Observable";import{Autocomplete}from"../Autocomplete/Autocomplete";import{Button}from"../../Button";import{Icon}from"../../Icon";import{Observer}from"../../Observer";var EditableLabelGroup=function(e){function t(o){var n=e.call(this,o)||this;return n.autocompleteRef=React.createRef(),n.autocompleteValue=new ObservableValue(""),n.isMouseDownEventHandled=!1,n.labelGroupRef=React.createRef(),n.renderTitleIconFlag=new ObservableValue(!1),n.selectedLabelContents=new ObservableArray,n.filterLabelModelAgainstContents=function(e){return 0==ObservableLike.getValue(n.props.labelProps).filter(function(t){return t.content.toUpperCase()===e.content.toUpperCase()}).length},n.onAddButtonClicked=function(){n.setState({isInEditMode:!0},function(){return n.autocompleteRef.current.focus()})},n.onAutocompleteFocus=function(e){n.selectedLabelContents.removeAll()},n.onAutocompleteValueChange=function(e){n.autocompleteValue.value=e},n.onBlur=function(e){n.focusOutTimeoutId=setTimeout(function(){n.selectedLabelContents.removeAll(),n.autocompleteValue.value="",n.setState({isInEditMode:!1}),n.props.onBlur&&n.props.onBlur()},0)},n.onCheckForDuplicates=function(e){return 0!==ObservableLike.getValue(n.props.labelProps).filter(function(t){return t.content.trim().toUpperCase()===e.trim().toUpperCase()}).length},n.onFocus=function(e){if(clearTimeout(n.focusOutTimeoutId),!n.state.isInEditMode){var t=function(){n.renderTitleIconFlag.value=!1,n.autocompleteRef.current.focus()};n.setState({isInEditMode:!0},t)}},n.onGetSuggestions=function(e){if(""===e||!n.props.getSuggestedLabels)return new Promise(function(e){return e([])});var t=n.props.getSuggestedLabels(e);return Promise.resolve(t).then(function(e){return e.filter(n.filterLabelModelAgainstContents)})},n.onInnerMouseDOwn=function(e){n.state.isInEditMode&&(n.isMouseDownEventHandled=!0)},n.onInputKeyDown=function(e){var t=n.autocompleteValue.value;e.which!==KeyCode.backspace&&e.which!==KeyCode.delete||n.props.labelProps.length>0&&""===t&&(n.removeLabel(ObservableLike.getValue(n.props.labelProps)[n.props.labelProps.length-1].content),e.preventDefault())},n.onInputSubmit=function(e){n.props.onLabelSubmit&&n.props.onLabelSubmit(e),n.autocompleteValue.value="",n.autocompleteRef.current.focus()},n.onLabelKeyDown=function(e,t,o){if(n.props.onLabelKeyDown&&n.props.onLabelKeyDown(e,t,o),!e.isDefaultPrevented()){var r=new Set(__spreadArrays(n.selectedLabelContents.value,[t.content]));if(e.which===KeyCode.backspace||e.which===KeyCode.delete){var l=-1,a=99999;if(r.forEach(function(e){var t=ObservableLike.getValue(n.props.labelProps).findIndex(function(t){return t.content===e});a=Math.min(a,t)}),0===a){var s=new Set(r);l=ObservableLike.getValue(n.props.labelProps).findIndex(function(e){return!s.has(e.content)})}else l=a-1;-1===l?n.autocompleteRef.current.focus():n.labelGroupRef.current.focusLabel(l),r.forEach(function(e){return n.removeLabel(e)}),n.selectedLabelContents.removeAll()}else e.which!==KeyCode.upArrow&&e.which!==KeyCode.downArrow&&e.which!==KeyCode.leftArrow&&e.which!==KeyCode.rightArrow||n.selectedLabelContents.removeAll()}},n.onLabelMouseDown=function(e,t,o){if(n.props.onLabelMouseDown&&n.props.onLabelMouseDown(e,t,o),!e.isDefaultPrevented()&&n.state.isInEditMode){var r=new Set(n.selectedLabelContents.value);e.ctrlKey?r.has(t.content)?n.selectedLabelContents.removeAll(function(e){return e===t.content}):n.selectedLabelContents.push(t.content):n.selectedLabelContents.value=r.has(t.content)?[]:[t.content]}},n.onOuterMouseDown=function(e){if(n.isMouseDownEventHandled)n.isMouseDownEventHandled=!1;else if(!n.state.isInEditMode){e.preventDefault();var t=function(){n.renderTitleIconFlag.value=!1,n.autocompleteRef.current.focus()};n.setState({isInEditMode:!0},t)}},n.onWrapperKeyDown=function(e){e.which===KeyCode.escape&&(n.selectedLabelContents.removeAll(),n.autocompleteValue.value="",n.setState({isInEditMode:!1}),n.props.onBlur&&n.props.onBlur(),e.preventDefault())},n.groupId="editable-label-group-"+t.editableGroupCount,n.state={isInEditMode:!1},n}return __extends(t,e),t.prototype.render=function(){var e,t=this,o=this.props,n=o.addButtonText,r=void 0===n?Resources.AddLabelButtonText:n,l=o.className,a=o.customColors,s=o.disableColorPicker,u=void 0!==s&&s,i=o.disableMouseFocusOnLabels,c=void 0!==i&&i,p=o.duplicateLabelText,d=o.enableHoverStyles,b=void 0===d||d,f=o.labelProps,m=o.onLabelClick,v=o.shrinkToContents,h=void 0!==v&&v,L=o.title,g=o.useBlankZeroData,w=void 0!==g&&g,C=o.watermark,I=void 0===C?Resources.AddLabelWatermark:C,D=this.state.isInEditMode,y=D?"edit":"",M=D?WrappingBehavior.freeFlow:this.props.wrappingBehavior;if(f.length>0||D)e=React.createElement("div",{className:css("bolt-labelgroup--editableWrapper",y,!h&&"default-padding"),onKeyDown:this.onWrapperKeyDown,onMouseDown:this.onInnerMouseDOwn},React.createElement(LabelGroup,__assign({ref:this.labelGroupRef},this.props,{className:void 0,id:getSafeId(this.groupId),onLabelMouseDown:this.onLabelMouseDown,onLabelKeyDown:this.onLabelKeyDown,onLabelClick:m,selectedLabelContents:this.selectedLabelContents,title:void 0,disableMouseFocusOnLabels:c,enableHoverStyles:b,wrappingBehavior:M}),D&&React.createElement(Autocomplete,{ref:this.autocompleteRef,suggestionProvider:this.onGetSuggestions,value:this.autocompleteValue,placeholder:I,onKeyDown:this.onInputKeyDown,onSubmit:this.onInputSubmit,onFocus:this.onAutocompleteFocus,onInputValueChange:this.onAutocompleteValueChange,customColors:a,onCheckForDuplicateInParent:this.onCheckForDuplicates,onDuplicateInParentText:p,disableColorPicker:u,ariaDescribedBy:getSafeId(this.groupId)})));else{if(w)return null;e=React.createElement(Button,{className:"bolt-labelgroup-addButton",text:r,iconProps:{iconName:"Add"},onClick:this.onAddButtonClicked})}return React.createElement("div",{className:css(l,"bolt-labelgroup-editable flex-column",y),onFocus:this.onFocus,onBlur:this.onBlur,onMouseDown:this.onOuterMouseDown,onMouseEnter:function(){return t.renderTitleIconFlag.value=!D},onMouseLeave:function(){return t.renderTitleIconFlag.value=!1}},L&&React.createElement(Observer,{renderIconFlag:this.renderTitleIconFlag},function(e){return React.createElement("div",{className:"bolt-labelgroup-title-wrapper body-m flex-row"},React.createElement("div",{className:"bolt-labelgroup-title-content"},L),e.renderIconFlag&&React.createElement(Icon,{iconName:"Edit"}))}),e)},t.prototype.componentWillUnmount=function(){clearTimeout(this.focusOutTimeoutId)},t.prototype.focus=function(){var e=this;this.setState({isInEditMode:!0},function(){return e.autocompleteRef.current&&e.autocompleteRef.current.focus()})},t.prototype.removeLabel=function(e){this.props.onLabelRemove&&this.props.onLabelRemove(ObservableLike.getValue(this.props.labelProps).find(function(t){return t.content===e})),this.selectedLabelContents.removeAll(function(t){return t===e})},t.editableGroupCount=0,t}(React.Component);export{EditableLabelGroup};