import{__assign,__extends}from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./IdentityPicker.css";import*as React from"react";import{ObservableArray,ObservableLike,ObservableValue}from"../../Core/Observable";import{makeCancelable}from"../../Core/Util/Promise";import{format}from"../../Core/Util/String";import{IconSize}from"../../Icon";import{IdentityCard}from"../../IdentityCard";import{Observer}from"../../Observer";import{Persona,PersonaSize}from"../../Persona";import*as Resources from"../../Resources.IdentityPicker";import{TagPicker}from"../../TagPicker";import{Tooltip}from"../../TooltipEx";import{KeyCode}from"../../Util";import{shouldShowIdentityCard}from"../IdentityPickerDropdown/IdentityPickerUtils";import{IdentityType}from"../IdentityPickerDropdown/SharedIdentityPicker.Props";import{IdentityPickerSuggestionItem}from"../IdentityPickerSuggestionsList/IdentityPickerSuggestionItem";var IdentityPicker=function(e){function t(t){var n=e.call(this,t)||this;return n.resolveEmailPromises=[],n.itemRefs={},n.tagPickerRef=React.createRef(),n.openedIdentityCard=new ObservableValue(void 0),n.outerElement=React.createRef(),n.lastSearchVal="",n.suggestions=new ObservableArray([]),n.suggestionsLoading=new ObservableValue(!1),n.areTagsEqual=function(e,t){return e.entityId===t.entityId},n.renderSuggestionItem=function(e){return React.createElement("div",{className:"flex-row flex-grow",onKeyDown:n.onKeyDownSuggestionItem},React.createElement(IdentityPickerSuggestionItem,__assign({},e,{onOpenPersonaCard:n.onOpenPersonaCard,ref:function(t){return n.itemRefs[e.item.entityId]=t},renderSuggestion:n.props.renderCustomIdentitySuggestion&&n.renderCustomSuggestionItem})))},n.onKeyDownSuggestionItem=function(e){e.defaultPrevented||e.which!==KeyCode.leftArrow&&e.which!==KeyCode.escape&&e.which!==KeyCode.tab||n.tagPickerRef.current&&(n.tagPickerRef.current.focus(),e.preventDefault())},n.createDefaultItem=function(e){return{displayName:e,originDirectory:"email",originId:e,entityId:e,entityType:IdentityType.Custom}},n.onOpenPersonaCard=function(e){shouldShowIdentityCard(e)&&(n.openedIdentityCard.value=e)},n.onClosePersonaCard=function(){n.openedIdentityCard.value=void 0,n.tagPickerRef.current.focus()},n.shouldBlurClear=function(){return void 0===n.openedIdentityCard.value},n.onEmptyInputFocus=function(){n.updateSuggestionsList(n.props.pickerProvider.onEmptyInputFocus())},n.focusContactCardButton=function(e){n.itemRefs[e.entityId]&&n.itemRefs[e.entityId].focus()},n.onAddIdentity=function(e){!!n.props.pickerProvider.addIdentitiesToMRU&&n.props.pickerProvider.addIdentitiesToMRU([e]),n.props.onIdentityAdded(e)},n.onDelimitedSearch=function(e){e.map(function(e){return e.trim()}).forEach(function(e){n.updateResolvedEmail(n.props.pickerProvider.onFilterIdentities(e),e),n.props.onIdentityAdded(n.createDefaultItem(e))}),n.tagPickerRef.current&&n.tagPickerRef.current.clearTagPicker()},n.renderCustomSuggestionItem=function(e){return n.props.renderCustomIdentitySuggestion&&n.props.renderCustomIdentitySuggestion(e.item)},n.convertItemToPill=function(e,t){var r="email"===e.originDirectory;return n.props.convertItemToPill&&e.entityType===IdentityType.Custom?n.props.convertItemToPill(e,t):{className:"bolt-identity-picker-pill flex-row",content:r?React.createElement(Tooltip,{text:format(Resources.UnknownUserOrGroup,e.displayName)},React.createElement("div",{className:"bolt-identity-picker-unresolved-email"},e.displayName)):e.displayName||e.mailNickname,onRenderFilledVisual:r?void 0:function(){return React.createElement(Persona,{ariaLabel:"",className:"flex-row flex-center",identity:e,size:PersonaSize.size20})}}},n.onResolveSuggestions=function(e){n.lastSearchVal=e;var t=n.props.pickerProvider.onFilterIdentities(e,ObservableLike.getValue(n.props.selectedIdentities));null!==t&&(n.cachedResults[e]?n.suggestions.value=n.cachedResults[e].filter(function(e){return!ObservableLike.getValue(n.props.selectedIdentities).some(function(t){return t.entityId===e.entityId})}):n.updateSuggestionsList(t,e))},n.cachedResults={},n}return __extends(t,e),t.prototype.render=function(){var e=this;return React.createElement("div",{className:this.props.className,ref:this.outerElement},React.createElement(Observer,{openedIdentityCard:this.openedIdentityCard},function(t){return React.createElement(React.Fragment,null,React.createElement(TagPicker,{suggestionsLoading:e.suggestionsLoading,areTagsEqual:e.areTagsEqual,convertItemToPill:e.convertItemToPill,deliminator:e.props.onResolveEntity&&";",noResultsFoundText:Resources.IdentityPickerNoResultsText,onBlur:e.props.onBlur,onDelimitedSearch:e.props.onResolveEntity&&e.onDelimitedSearch,onEmptyInputFocus:e.onEmptyInputFocus,onSearchChanged:e.onResolveSuggestions,onSuggestionExpanded:e.focusContactCardButton,onTagAdded:e.onAddIdentity,onTagRemoved:e.props.onIdentityRemoved,onTagsRemoved:e.props.onIdentitiesRemoved,placeholderText:e.props.placeholderText||Resources.MultiIdentityPickerPlaceholderText,prefixIconProps:{className:"bolt-identity-picker-contact-icon secondary-text justify-center flex-center",iconName:"Contact",size:IconSize.medium},ref:e.tagPickerRef,renderSuggestionItem:e.renderSuggestionItem,shouldBlurClear:e.shouldBlurClear,selectedTags:e.props.selectedIdentities,suggestions:e.suggestions,suggestionsLoadingText:Resources.Loading}),t.openedIdentityCard&&React.createElement(IdentityCard,{getEntityFromUniqueAttribute:e.props.pickerProvider.getEntityFromUniqueAttribute,key:t.openedIdentityCard.entityId,identity:t.openedIdentityCard,displayName:t.openedIdentityCard.displayName,target:e.outerElement.current,onDismissCallback:e.onClosePersonaCard,onRequestConnectionInformation:e.props.pickerProvider.onRequestConnectionInformation}))}))},t.prototype.componentWillUnmount=function(){this.currentPromise&&this.currentPromise.cancel();for(var e=0,t=this.resolveEmailPromises;e<t.length;e++){t[e].cancel()}},t.prototype.updateResolvedEmail=function(e,t){var n=this,r=e,o=e;if(Array.isArray(r))this.props.onResolveEntity&&1===r.length&&this.props.onResolveEntity(t,ObservableLike.getValue(this.props.selectedIdentities).some(function(e){return e.entityId===r[0].entityId})?null:r[0]);else if(o&&o.then){(this.currentPromise=makeCancelable(o)).promise.then(function(e){n.props.onResolveEntity&&1===e.length&&n.props.onResolveEntity(t,ObservableLike.getValue(n.props.selectedIdentities).some(function(t){return t.entityId===e[0].entityId})?null:e[0])})}},t.prototype.updateSuggestionsList=function(e,t){var n=this,r=e,o=e;if(Array.isArray(r))this.suggestions.value=r.filter(function(e){return!ObservableLike.getValue(n.props.selectedIdentities).some(function(t){return t.entityId===e.entityId})});else if(o&&o.then){this.suggestionsLoading.value=!0;var i=this.currentPromise=makeCancelable(o);this.resolveEmailPromises.push(i),i.promise.then(function(e){n.resolveEmailPromises=n.resolveEmailPromises.filter(function(e){return e!==i}),i===n.currentPromise&&(t&&n.lastSearchVal!==t||(n.suggestions.value=e.filter(function(e){return!ObservableLike.getValue(n.props.selectedIdentities).some(function(t){return t.entityId===e.entityId})})),t&&""!==t&&n.suggestions.value&&n.suggestions.value.length>0&&(n.cachedResults[t]=e),n.suggestionsLoading.value=!1)},function(){n.resolveEmailPromises=n.resolveEmailPromises.filter(function(e){return e!==i})})}},t}(React.Component);export{IdentityPicker};