import{__assign,__extends}from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Pill.css";import*as React from"react";import{format}from"../../Core/Util/String";import{Button}from"../../Button";import{FocusZoneContext}from"../../FocusZone";import{Icon,IconSize}from"../../Icon";import*as Resources from"../../Resources.Widgets";import{css,getSafeId,KeyCode}from"../../Util";import{darken,getColorString,isDark}from"../../Utilities/Color";import{getTabIndex}from"../../Utilities/Focus";import{PillSize,PillVariant}from"./Pill.Props";var Pill=function(e){function o(o){var t=e.call(this,o)||this;return t.getChildText=function(){var e="";return React.Children.map(t.props.children,function(o){"string"==typeof o&&(e+=o)}),e},t.onKeyDown=function(e){e.which===KeyCode.enter&&t.props.onClick&&t.props.onClick()},t.onMouseEnter=function(e){t.props.onMouseEnter&&t.props.onMouseEnter(e),t.setState({isHoveringPrimaryElement:!0})},t.onMouseLeave=function(e){t.props.onMouseLeave&&t.props.onMouseLeave(e),t.setState({isHoveringPrimaryElement:!1})},t.onMouseLeaveButton=function(){t.setState({isHoveringPrimaryElement:!0})},t.onMouseOverButton=function(){t.setState({isHoveringPrimaryElement:!1})},t.state={isHoveringPrimaryElement:!1},t}return __extends(o,e),o.getColorStyle=function(e,o,t){if(e){var n=t&&o?darken(e,.06):e;return{backgroundColor:getColorString(n)}}},o.getSizeClass=function(e){switch(e){case PillSize.compact:return"compact";case PillSize.large:return"large";case PillSize.regular:default:return"regular"}},o.getVariantClass=function(e,o){switch(e){case PillVariant.outlined:return"outlined";case PillVariant.colored:return o?css("colored",isDark(o)?"dark":"light"):"standard";case PillVariant.standard:default:return"standard"}},o.getDerivedStateFromProps=function(e,o){return o},o.prototype.render=function(){var e=this,t=this.props,n=t.ariaHidden,r=t.contentClassName,i=t.className,s=t.color,a=t.containsCount,l=void 0!==a&&a,c=t.iconProps,u=t.id,m=t.onClick,p=t.onFocus,d=t.onRemoveClick,f=t.onRenderFilledVisual,v=t.size,g=void 0===v?PillSize.regular:v,C=t.variant,P=void 0===C?PillVariant.standard:C,h=this.state.isHoveringPrimaryElement,S=this.props.ariaLabel||this.getChildText();return React.createElement(FocusZoneContext.Consumer,null,function(t){return React.createElement("div",{"aria-label":S,"aria-hidden":n,className:css(i,"bolt-pill flex-row flex-center",o.getVariantClass(P,s),o.getSizeClass(g),l&&"count",h&&"hover",m&&"clickable",f&&"has-filled-visual",c&&!f&&"has-icon",d&&"has-remove-button"),"data-focuszone":e.props.excludeFocusZone?void 0:t.focuszoneId,id:getSafeId(u),onClick:m,onFocus:p,onKeyDown:e.onKeyDown,onMouseEnter:e.onMouseEnter,onMouseLeave:e.onMouseLeave,role:m?"button":"presentation",style:o.getColorStyle(s,h,m),tabIndex:m||p?getTabIndex(e.props):void 0},f&&React.createElement("div",{className:"bolt-pill-filled-visual flex-noshrink"},f()),c&&!f&&React.createElement(Icon,__assign({},c,{className:css(c.className,"bolt-pill-icon")})),React.createElement("div",{className:css(r,"bolt-pill-content text-ellipsis")},e.props.children),d&&React.createElement(Button,{ariaLabel:format(Resources.RemovePillLabel,S),className:"bolt-pill-button",iconProps:{iconName:"Cancel",size:IconSize.inherit},onClick:d,onMouseLeave:e.onMouseLeaveButton,onMouseOver:e.onMouseOverButton,subtle:!0,tooltipProps:{text:format(Resources.RemovePillLabel,S)}}))})},o}(React.Component);export{Pill};